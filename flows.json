[
    {
        "id": "ca227cab.f7e97",
        "type": "tab",
        "label": "JSON-REDIS-TEST",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a4252285.86ddb",
        "type": "tab",
        "label": "JSON-REDIS-SECOND",
        "disabled": false,
        "info": "A simple API implementation for JSON data transformation.\nJSON data is stored in Redis Database."
    },
    {
        "id": "89248eb9.e979f",
        "type": "redis-config",
        "z": "",
        "host": "172.17.0.3",
        "port": "{{REDIS_PORT_6379_TCP_PORT}}",
        "dbase": "{{REDIS_DB}}",
        "pass": "X6NvLgr5NJ/INEuzt6mxP5QdTyK+2ZQiXwwtaj8Mipy97SRM1pj6dK734XmoFZrNg5+b8kpO54cIPTVkdeveloper@ubuntu"
    },
    {
        "id": "22e7d6ff.867c1a",
        "type": "ui_group",
        "z": "",
        "name": "Times",
        "tab": "8cfd7aad.920828",
        "order": 2,
        "disp": false,
        "width": "4"
    },
    {
        "id": "f8954383.42769",
        "type": "ui_group",
        "z": "",
        "name": "Modes",
        "tab": "8cfd7aad.920828",
        "order": 3,
        "disp": false,
        "width": "1"
    },
    {
        "id": "8cfd7aad.920828",
        "type": "ui_tab",
        "z": "",
        "name": "Maestro Protos",
        "icon": "loop",
        "order": 2
    },
    {
        "id": "f37b2107.7518c",
        "type": "ui_group",
        "z": "",
        "name": "Timer A",
        "tab": "8cfd7aad.920828",
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a0391cff.f70c7",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "24428b6c.83bca4",
        "type": "ui_group",
        "z": "",
        "name": "Blinking LED",
        "tab": "d1567a59.3c3ec8",
        "disp": true,
        "width": "6"
    },
    {
        "id": "d1567a59.3c3ec8",
        "type": "ui_tab",
        "z": "",
        "name": "Blinking LED",
        "icon": "dashboard"
    },
    {
        "id": "fb6328e1.778858",
        "type": "ui_group",
        "z": "",
        "name": "Modes",
        "tab": "f9d21cef.46f4e",
        "order": 3,
        "disp": false,
        "width": "1"
    },
    {
        "id": "f9d21cef.46f4e",
        "type": "ui_tab",
        "z": "",
        "name": "Revolution Commander",
        "icon": "loop",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "43a77a82.e8f854",
        "type": "ui_group",
        "z": "",
        "name": "Times",
        "tab": "f9d21cef.46f4e",
        "order": 2,
        "disp": false,
        "width": "4"
    },
    {
        "id": "2d0f7f4f.4b419",
        "type": "ui_group",
        "z": "",
        "name": "Modes",
        "tab": "4ccc284a.36d258",
        "order": 3,
        "disp": false,
        "width": "1"
    },
    {
        "id": "4ccc284a.36d258",
        "type": "ui_tab",
        "z": "",
        "name": "Revolution Commander",
        "icon": "loop",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5739b86e.9e8578",
        "type": "ui_group",
        "z": "",
        "name": "Times",
        "tab": "4ccc284a.36d258",
        "order": 2,
        "disp": false,
        "width": "4"
    },
    {
        "id": "70c663a8.bb963c",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Create Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 40,
        "wires": [
            [
                "61731c23.1f8214"
            ]
        ]
    },
    {
        "id": "61731c23.1f8214",
        "type": "function",
        "z": "ca227cab.f7e97",
        "name": "Generate Data for Create",
        "func": "datatypes = [\n    \"allergies\", \n    \"medications\", \n    \"problems\",\n    \"vitalsigns\"\n];\n\ntype = Math.floor(Math.random() * 4);\n//type=3;\ntimestamp = msg.payload;\n\nmsg.payload = {\n    ptId: 9999999001,\n    datatype: datatypes[type]\n}\n\nswitch(type) {\n    case 0:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            cause: \"cats\",\n            causeCode: \"cats\",\n            causeTerminology: \"cats\",\n            dateCreated: timestamp,\n            reaction: \"cats\",\n            originalComposition: \"\",\n            originalSource: \"\",\n            terminologyCode: \"\",\n        };\n        break;\n    case 1:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            dateCreated: timestamp,\n            doseAmount: \"20 mg\",\n            doseDirections: \"20 mg\",\n            doseTiming: \"1 per day\",\n            medicationCode: \"test\",\n            name: \"Paracetomol\",\n            route: \"Po Per Oral\",\n            startDate: \"2019-06-12\",\n            startTime: \"2019-06-15\",\n        }\n        break;\n    case 2:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            code: \"test\",\n            dateCreated: timestamp,\n            dateOfOnset: \"2019-06-11\",\n            description: \"test\",\n            problem: \"Asthma\",\n            terminology: \"test\",\n            originalComposition: \"\",\n            originalSource: \"\",\n        }\n        break;\n    case 3:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            dateCreate: 1560429237,\n            diastolicBP: \"98\",\n            heartRate: \"98\",\n            levelOfConsciousness: \"Voice\",\n            newsScore: \"11\",\n            oxygenSaturation: \"95\",\n            oxygenSupplemental: true,\n            respirationRate: \"13\",\n            systolicBP: \"98\",\n            temperature: \"37\",\n        }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 40,
        "wires": [
            [
                "a654a7ba.57d508"
            ]
        ]
    },
    {
        "id": "1bd89215.bff21e",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "Create Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 40,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "a654a7ba.57d508",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Create API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://127.0.0.1:1880/patient/'&msg.payload.ptId&'/'&msg.payload.datatype",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 40,
        "wires": [
            [
                "f7f11e95.02fa8"
            ]
        ]
    },
    {
        "id": "f7f11e95.02fa8",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Method is POST",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 40,
        "wires": [
            [
                "1bd89215.bff21e"
            ]
        ]
    },
    {
        "id": "bdbdede4.18fe5",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Allergies Synopsis Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 180,
        "wires": [
            [
                "8de67aed.57d8b8"
            ]
        ]
    },
    {
        "id": "8de67aed.57d8b8",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "GET Allergies Synopsis",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/synopsis/allergies",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 180,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "f2980185.9485",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Allergy Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 360,
        "wires": [
            [
                "915959e1.44b4b8"
            ]
        ]
    },
    {
        "id": "c2fd6f7b.4359b",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "GET Medicians Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/medications/0ndpc1dvqagapo0oui3num",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 400,
        "y": 400,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "a3cf0127.b120b",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Medications Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 400,
        "wires": [
            [
                "c2fd6f7b.4359b"
            ]
        ]
    },
    {
        "id": "915959e1.44b4b8",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "GET Allergies Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/allergies/kq21alape7mtw7eupmrzua?transform=TransformB-Allergy-UI2FHIR",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 390,
        "y": 360,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "d29b080.72b9ef8",
        "type": "json",
        "z": "ca227cab.f7e97",
        "name": "Response Data JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "b2bcce5d.e6172"
            ]
        ]
    },
    {
        "id": "b2bcce5d.e6172",
        "type": "debug",
        "z": "ca227cab.f7e97",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1610,
        "y": 240,
        "wires": []
    },
    {
        "id": "346d5118.bc744e",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "Update Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 80,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "e6ce24c0.5923a8",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Method is PUT",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 80,
        "wires": [
            [
                "346d5118.bc744e"
            ]
        ]
    },
    {
        "id": "21443fe8.ad027",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Update API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://127.0.0.1:1880/patient/'&msg.payload.ptId&'/'&msg.payload.datatype&'/'&msg.payload.data.sourceId",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 80,
        "wires": [
            [
                "e6ce24c0.5923a8"
            ]
        ]
    },
    {
        "id": "c4ee5e07.035f7",
        "type": "function",
        "z": "ca227cab.f7e97",
        "name": "Generate Data for Update",
        "func": "msg.payload = {\n    ptId: 9999999001,\n    datatype: 'allergies',\n    data: {\n        author: \"Not known\",\n        cause: \"Adverse reaction to aspirin\",\n        causeCode: \"http://snomed.info/sct\",\n        causeTerminology: 292044008,\n        dateCreated: 1181170800000,\n        id: \"kq21alape7mtw7eupmrzua\",\n        originalComposition: \"\",\n        originalSource: \"\",\n        reaction: \"Adverse reaction to aspirin\",\n        source: \"ethercis\",\n        sourceId: \"kq21alape7mtw7eupmrzua\",\n        terminologyCode: \"http://snomed.info/sct\"\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 80,
        "wires": [
            [
                "21443fe8.ad027"
            ]
        ]
    },
    {
        "id": "fbeb5c3c.86b31",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Update Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "c4ee5e07.035f7"
            ]
        ]
    },
    {
        "id": "12fbbe5c.ea4bf2",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Delete Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 120,
        "wires": [
            [
                "fd3ed4da.5039b8"
            ]
        ]
    },
    {
        "id": "7a18b726.962ad8",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "Delete Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 120,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "c5602d5b.40c06",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Method is DELETE",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "DELETE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 120,
        "wires": [
            [
                "7a18b726.962ad8"
            ]
        ]
    },
    {
        "id": "55780dd4.ac1834",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Delete API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://127.0.0.1:1880/patient/'&msg.payload.ptId&'/'&msg.payload.datatype&'/'&msg.payload.sourceId",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 120,
        "wires": [
            [
                "c5602d5b.40c06"
            ]
        ]
    },
    {
        "id": "fd3ed4da.5039b8",
        "type": "function",
        "z": "ca227cab.f7e97",
        "name": "Generate Data for Delete",
        "func": "msg.payload = {\n    ptId: 9999999001,\n    datatype: 'allergies',\n    sourceId: \"uige9bzetlkce76w5x9hti\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "55780dd4.ac1834"
            ]
        ]
    },
    {
        "id": "107ce771.6457d9",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "GET Medication Synopsis",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/synopsis/medications",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 220,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "ea4d8c0e.35447",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Medications Synopsis Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "107ce771.6457d9"
            ]
        ]
    },
    {
        "id": "2b1d53a3.2d6e9c",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "GET Problems Synopsis",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/synopsis/problems",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 260,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "d87b9a32.7dced8",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Problems Synopsis Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 260,
        "wires": [
            [
                "2b1d53a3.2d6e9c"
            ]
        ]
    },
    {
        "id": "92b366c4.18fa38",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Problems Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 440,
        "wires": [
            [
                "2ce56acd.2e8186"
            ]
        ]
    },
    {
        "id": "2ce56acd.2e8186",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "GET Problems Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/problems/kb6q8h0zucjx8nuov7h8",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "aca19026.42e48",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Patient Create Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 560,
        "wires": [
            [
                "d1f080a3.9684"
            ]
        ]
    },
    {
        "id": "d1f080a3.9684",
        "type": "function",
        "z": "ca227cab.f7e97",
        "name": "Generate Data for Patient",
        "func": "\nmsg.payload = {\n    data: {\n        address: {\n            city: \"Redhill\",\n            country: \"United Kingdom\",\n            district: \"Surrey\",\n            line: \"3 Cooper Walk\",\n            postalCode: \"RH1 6SF\",\n        },\n        birthDate: \"1956-11-10\",\n        gender: \"male\",\n        id: global.get('patientID'),\n        name: {\n            family: \"Alex\",\n            given: [\n                \"Rob\",\n            ],\n            prefix: \"Mr\",\n            telecom: \"+779017 876\"\n        },\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 560,
        "wires": [
            [
                "931901dc.fd468"
            ]
        ]
    },
    {
        "id": "931901dc.fd468",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Create API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://127.0.0.1:1880/mpi/patient/'&msg.payload.data.id",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 560,
        "wires": [
            [
                "77b29e6b.3ec9e"
            ]
        ]
    },
    {
        "id": "77b29e6b.3ec9e",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Method is POST",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 560,
        "wires": [
            [
                "fb43903f.d5b7f"
            ]
        ]
    },
    {
        "id": "fb43903f.d5b7f",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "Create Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 1060,
        "y": 560,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "26927d55.9fd802",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Patient Update Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 620,
        "wires": [
            [
                "c0c1263a.608a38"
            ]
        ]
    },
    {
        "id": "c0c1263a.608a38",
        "type": "function",
        "z": "ca227cab.f7e97",
        "name": "Generate Data for Patient",
        "func": "\nmsg.payload = {\n    data: {\n        address: {\n            city: \"Redhill\",\n            country: \"United Kingdom\",\n            district: \"Surrey\",\n            line: \"3 Cooper Walk\",\n            postalCode: \"RH1 6SF\"\n        },\n        birthDate: \"1956-11-10\",\n        gender: \"female\",\n        id: \"9999999801\",\n        name: {\n            family: \"Tweed\",\n            given: [\n                \"Rob\"\n            ],\n            prefix: \"Mr\",\n            telecom: \"+779017 876\"\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 620,
        "wires": [
            [
                "2df98198.275a3e"
            ]
        ]
    },
    {
        "id": "2df98198.275a3e",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Update API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://159.65.91.78:1880/mpi/patient/'&msg.payload.data.id",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 620,
        "wires": [
            [
                "d0223c1.68e3cc"
            ]
        ]
    },
    {
        "id": "d0223c1.68e3cc",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Method is PUT",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 620,
        "wires": [
            [
                "b205a726.4a2468"
            ]
        ]
    },
    {
        "id": "b205a726.4a2468",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "Update Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 1060,
        "y": 620,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "cfa3dae1.785f78",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Patient Delete Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 680,
        "wires": [
            [
                "9dd1e5c1.517bd8"
            ]
        ]
    },
    {
        "id": "9dd1e5c1.517bd8",
        "type": "function",
        "z": "ca227cab.f7e97",
        "name": "Generate Data for Delete",
        "func": "msg.payload = {\n    ptId: 9999999801,\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "288aa33.bed915c"
            ]
        ]
    },
    {
        "id": "4d0a423f.a39dbc",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Method is DELETE",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "DELETE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 680,
        "wires": [
            [
                "56e2550d.1c52bc"
            ]
        ]
    },
    {
        "id": "56e2550d.1c52bc",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "Delete Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 680,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "288aa33.bed915c",
        "type": "change",
        "z": "ca227cab.f7e97",
        "name": "Delete API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://127.0.0.1:1880/mpi/patient/'&msg.payload.ptId",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 680,
        "wires": [
            [
                "4d0a423f.a39dbc"
            ]
        ]
    },
    {
        "id": "2b3ba8ff.77c038",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Patient Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 480,
        "wires": [
            [
                "c71269dd.7bed18"
            ]
        ]
    },
    {
        "id": "c71269dd.7bed18",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "GET Patients Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/mpi/patient/9999999800",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 390,
        "y": 480,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "36bff9b5.f5dd66",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Set Patient ID",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 760,
        "wires": [
            [
                "ed06ca39.693e48"
            ]
        ]
    },
    {
        "id": "ed06ca39.693e48",
        "type": "function",
        "z": "ca227cab.f7e97",
        "name": "Set Patient ID",
        "func": "global.set('patientID', 9999999797);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "23b5f1f0.f5a93e",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "VitalSigns Synopsis Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "14c6c9b5.d66386"
            ]
        ]
    },
    {
        "id": "14c6c9b5.d66386",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "GET VitalSigns Synopsis",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/synopsis/vitalsigns",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 300,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "1e6fe6e.29d4219",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Vitalsigns Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 520,
        "wires": [
            [
                "3f1f7855.3f6ab8"
            ]
        ]
    },
    {
        "id": "3f1f7855.3f6ab8",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "GET Problems Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/vitalsigns/s853d3jdfddvf89xni0cf",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 400,
        "y": 520,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "11087c60.d2c1a4",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Vitalsigns List Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 840,
        "wires": [
            [
                "e72bbd92.92316"
            ]
        ]
    },
    {
        "id": "e72bbd92.92316",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "GET Vitalsigns List",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/vitalsigns",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 390,
        "y": 840,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "2daaffb7.e4dfa",
        "type": "inject",
        "z": "ca227cab.f7e97",
        "name": "Patient Search Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 880,
        "wires": [
            [
                "b6ba88f8.c0a498"
            ]
        ]
    },
    {
        "id": "b6ba88f8.c0a498",
        "type": "http request",
        "z": "ca227cab.f7e97",
        "name": "GET Patients List",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/mpi/patient?name=Tweet",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 390,
        "y": 880,
        "wires": [
            [
                "d29b080.72b9ef8"
            ]
        ]
    },
    {
        "id": "59013b84.c90194",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/allergies/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "8ee3a0c3.21e54"
            ]
        ]
    },
    {
        "id": "8ee3a0c3.21e54",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "8cd5b328.f7605",
                "a7f31480.9434e8"
            ]
        ]
    },
    {
        "id": "96740483.977418",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hget",
        "name": "",
        "topic": "",
        "x": 890,
        "y": 240,
        "wires": [
            [
                "d484cd70.ac7be"
            ]
        ]
    },
    {
        "id": "8cd5b328.f7605",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HGET params",
        "func": "payload = msg.payload\nmsg.payload = [payload.ptId+'.'+payload.datatype, payload.sourceId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 240,
        "wires": [
            [
                "96740483.977418"
            ]
        ]
    },
    {
        "id": "c42515bd.4539a8",
        "type": "json",
        "z": "a4252285.86ddb",
        "name": "Database JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 900,
        "y": 300,
        "wires": [
            [
                "9ed77214.c1219"
            ]
        ]
    },
    {
        "id": "d4e6a338.575d2",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "GET Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 360,
        "wires": []
    },
    {
        "id": "330bd048.5dd15",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Create Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 80,
        "wires": []
    },
    {
        "id": "a7f31480.9434e8",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Transform method",
        "func": "msg.payload = {transform: msg.payload.transform ? msg.payload.transform : ''};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 360,
        "wires": [
            [
                "9ed77214.c1219"
            ]
        ]
    },
    {
        "id": "9ed77214.c1219",
        "type": "join",
        "z": "a4252285.86ddb",
        "name": "Add transform method",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 920,
        "y": 360,
        "wires": [
            [
                "7432f49a.b8ea7c"
            ]
        ]
    },
    {
        "id": "7432f49a.b8ea7c",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "Transform Switch",
        "property": "payload.transform",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "TransformA-Allergy-UI2openEHR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TransformB-Allergy-UI2FHIR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1150,
        "y": 360,
        "wires": [
            [
                "7db6a72f.28f2e8"
            ],
            [
                "cc4e438b.c7db8"
            ],
            [
                "3fba49a6.89b146"
            ]
        ]
    },
    {
        "id": "7db6a72f.28f2e8",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "TransformA-Allergy-UI2openEHR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"allergies_and_adverse_reactions\": {\t      \"adverse_reaction_risk\": {\t        \"causative_agent\": {\t          \"value\": msg.payload.cause,\t          \"code\": msg.payload.causeCode,\t          \"terminology\": msg.payload.causeTerminology\t        },\t        \"reaction_details\": {\t          \"manifestation\": {\t            \"code\": msg.payload.terminologyCode,\t            \"value\": msg.payload.reaction\t          }\t        }\t      }\t    },\t    \"composer\": {\t      \"value\": msg.payload.author\t    },\t    \"start_time\": $fromMillis(msg.payload.dateCreated),\t    \"host\": msg.payload.source,\t    \"uid\": msg.payload.sourceId,\t    \"patientId\": msg.payload.patientId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 320,
        "wires": [
            [
                "d4e6a338.575d2"
            ]
        ]
    },
    {
        "id": "cc4e438b.c7db8",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "TransformB-Allergy-UI2FHIR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"resourceType\": \"AllergyIntolerance\",\t    \"identifier\": [\t      {\t        \"system\": msg.payload.source,\t        \"value\": msg.payload.sourceId\t      }\t    ],\t    \"onset\": $fromMillis(msg.payload.dateCreated),\t    \"recordedDate\": $fromMillis(msg.payload.dateCreated),\t    \"recorder\": {\t      \"reference\": \"GMC Doctor\",\t      \"display\": msg.payload.author\t    },\t    \"patient\": {\t      \"reference\": \"=> fhirReference(patientId, 'Patient', false)\",\t      \"display\": \"{{patientName}}\"\t    },\t    \"substance\": {\t      \"coding\": [\t        {\t          \"system\": msg.payload.causeCode,\t          \"code\": msg.payload.causeTerminology,\t          \"display\": msg.payload.cause\t        }\t      ]\t    },\t    \"status\": \"active\",\t    \"type\": \"allergy\",\t    \"category\": \"other\",\t    \"reaction\": [\t      {\t        \"substance\": {\t          \"coding\": [\t            {\t              \"system\": msg.payload.causeCode,\t              \"code\": msg.payload.causeTerminology,\t              \"display\": msg.payload.cause\t            }\t          ],\t          \"text\": msg.payload.ause\t        },\t        \"certainty\": \"confirmed\",\t        \"manifestation\": [\t          {\t            \"coding\": [\t              {\t                \"system\": msg.payload.terminologyCode,\t                \"code\": \"TBC\",\t                \"display\": msg.payload.reaction\t              }\t            ],\t            \"text\": msg.payload.reaction\t          }\t        ],\t        \"description\": msg.payload.reaction\t      }\t    ],\t    \"note\": msg.payload.reaction\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 360,
        "wires": [
            [
                "d4e6a338.575d2"
            ]
        ]
    },
    {
        "id": "e526aea9.d6fed",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/problems/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "9f3aade6.b40a4"
            ]
        ]
    },
    {
        "id": "9f3aade6.b40a4",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "8cd5b328.f7605",
                "a7f31480.9434e8"
            ]
        ]
    },
    {
        "id": "be20b830.b91ec8",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/medications/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "537e32e5.74f0ec"
            ]
        ]
    },
    {
        "id": "537e32e5.74f0ec",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 300,
        "wires": [
            [
                "8cd5b328.f7605",
                "a7f31480.9434e8"
            ]
        ]
    },
    {
        "id": "3fba49a6.89b146",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "No Transform",
        "func": "msg.payload = msg.payload;\ndelete msg.payload.transform;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 400,
        "wires": [
            [
                "d4e6a338.575d2"
            ]
        ]
    },
    {
        "id": "d484cd70.ac7be",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 240,
        "wires": [
            [
                "bb0adf6b.99fe2"
            ],
            [
                "c42515bd.4539a8"
            ]
        ]
    },
    {
        "id": "aacd0284.3d1af",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "GET Data Error",
        "statusCode": "400",
        "headers": {},
        "x": 1700,
        "y": 233,
        "wires": []
    },
    {
        "id": "5d055c47.3c5414",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/allergies",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "ceb81c73.11ba6"
            ]
        ]
    },
    {
        "id": "ceb81c73.11ba6",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 40,
        "wires": [
            [
                "e9ce2306.6124e"
            ]
        ]
    },
    {
        "id": "6dfe29fd.184218",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 80,
        "wires": [
            [
                "e9ce2306.6124e"
            ]
        ]
    },
    {
        "id": "5263f5e2.f8bfac",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/medications",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "6dfe29fd.184218"
            ]
        ]
    },
    {
        "id": "edb67da4.69c64",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 121,
        "wires": [
            [
                "e9ce2306.6124e"
            ]
        ]
    },
    {
        "id": "875d1271.8a2eb",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/problems",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 121,
        "wires": [
            [
                "edb67da4.69c64"
            ]
        ]
    },
    {
        "id": "e9ce2306.6124e",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Add Source ID to Data",
        "func": "newid = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\nmsg.payload.data.id = newid;\nmsg.payload.data.sourceId = newid;\nmsg.payload.data.source = \"ethercis\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 80,
        "wires": [
            [
                "f922ff2f.6acf5"
            ]
        ]
    },
    {
        "id": "f922ff2f.6acf5",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype, payload.data.sourceId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 80,
        "wires": [
            [
                "a5b1d36b.145c4"
            ]
        ]
    },
    {
        "id": "a5b1d36b.145c4",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1130,
        "y": 80,
        "wires": [
            [
                "ce0d4f25.6e8cb"
            ]
        ]
    },
    {
        "id": "ce0d4f25.6e8cb",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data created successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 80,
        "wires": [
            [
                "330bd048.5dd15"
            ]
        ]
    },
    {
        "id": "739e2da.035d0d4",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/allergies/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "4a7bfaac.356e74"
            ]
        ]
    },
    {
        "id": "995b2aa1.466c58",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/medications/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "b614fc35.cf795"
            ]
        ]
    },
    {
        "id": "5069137.c3261ec",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/problems/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 601,
        "wires": [
            [
                "a9d0fc6b.7042a"
            ]
        ]
    },
    {
        "id": "a9d0fc6b.7042a",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "b9b4e55f.3a8718",
                "79f8a86e.8ab6f8"
            ]
        ]
    },
    {
        "id": "b614fc35.cf795",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 560,
        "wires": [
            [
                "b9b4e55f.3a8718",
                "79f8a86e.8ab6f8"
            ]
        ]
    },
    {
        "id": "4a7bfaac.356e74",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 520,
        "wires": [
            [
                "b9b4e55f.3a8718",
                "79f8a86e.8ab6f8"
            ]
        ]
    },
    {
        "id": "79825b0c.60c504",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype, payload.sourceId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 600,
        "wires": [
            [
                "a45bf52f.a03ed8"
            ]
        ]
    },
    {
        "id": "a45bf52f.a03ed8",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1150,
        "y": 600,
        "wires": [
            [
                "bc3c28c4.0f9418"
            ]
        ]
    },
    {
        "id": "bc3c28c4.0f9418",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data updated successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 600,
        "wires": [
            [
                "c6870dbd.fb318"
            ]
        ]
    },
    {
        "id": "c6870dbd.fb318",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Update Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 600,
        "wires": []
    },
    {
        "id": "db05c943.a29cd8",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/allergies/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 740,
        "wires": [
            [
                "3508ab9e.c4b754"
            ]
        ]
    },
    {
        "id": "204d3c7c.7f9fa4",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/medications/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 780,
        "wires": [
            [
                "11893915.1ea3c7"
            ]
        ]
    },
    {
        "id": "71ec6d15.d7de94",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/problems/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 821,
        "wires": [
            [
                "ea7d0f77.ce709"
            ]
        ]
    },
    {
        "id": "ea7d0f77.ce709",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 820,
        "wires": [
            [
                "3470d222.ae34ee"
            ]
        ]
    },
    {
        "id": "11893915.1ea3c7",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 780,
        "wires": [
            [
                "3470d222.ae34ee"
            ]
        ]
    },
    {
        "id": "3508ab9e.c4b754",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 740,
        "wires": [
            [
                "3470d222.ae34ee"
            ]
        ]
    },
    {
        "id": "3470d222.ae34ee",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HDEL params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype, payload.sourceId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 780,
        "wires": [
            [
                "704e92e2.fd893c"
            ]
        ]
    },
    {
        "id": "704e92e2.fd893c",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hdel",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 780,
        "wires": [
            [
                "d5787ba6.9e2768"
            ]
        ]
    },
    {
        "id": "9a8739bd.d82fb8",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data deleted successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 760,
        "wires": [
            [
                "9cc68eec.81db5"
            ]
        ]
    },
    {
        "id": "9cc68eec.81db5",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Delete Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 760,
        "wires": []
    },
    {
        "id": "d5787ba6.9e2768",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "9a8739bd.d82fb8"
            ],
            [
                "a857a9c4.2a9918"
            ]
        ]
    },
    {
        "id": "a857a9c4.2a9918",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot delete data\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 800,
        "wires": [
            [
                "4cd01864.b31958"
            ]
        ]
    },
    {
        "id": "4cd01864.b31958",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Delete Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 800,
        "wires": []
    },
    {
        "id": "e9c2b01a.a1252",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/synopsis/allergies/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "26795907.b0ce36"
            ]
        ]
    },
    {
        "id": "26795907.b0ce36",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 980,
        "wires": [
            [
                "f754fca5.24db",
                "3d53e3a4.e56adc",
                "b82e0bd1.1981e8"
            ]
        ]
    },
    {
        "id": "282807cf.fee9f8",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/synopsis/problems",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "881a490d.0e0778"
            ]
        ]
    },
    {
        "id": "881a490d.0e0778",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "f754fca5.24db",
                "3d53e3a4.e56adc",
                "b82e0bd1.1981e8"
            ]
        ]
    },
    {
        "id": "abcd3018.5290a",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/synopsis/medications",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "e17865c.73c5798"
            ]
        ]
    },
    {
        "id": "e17865c.73c5798",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "f754fca5.24db",
                "3d53e3a4.e56adc",
                "b82e0bd1.1981e8"
            ]
        ]
    },
    {
        "id": "f754fca5.24db",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HKEYS params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 980,
        "wires": [
            [
                "181637c3.924d08"
            ]
        ]
    },
    {
        "id": "181637c3.924d08",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hkeys",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 980,
        "wires": [
            [
                "cdae8d9d.c6429"
            ]
        ]
    },
    {
        "id": "3d53e3a4.e56adc",
        "type": "join",
        "z": "a4252285.86ddb",
        "name": "JOIN Keys Data",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 760,
        "y": 1060,
        "wires": [
            [
                "1599b2b0.c5137d"
            ]
        ]
    },
    {
        "id": "7f2726b5.4699c8",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "Keys JSON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"keys\":msg.payload\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1000,
        "wires": [
            [
                "3d53e3a4.e56adc"
            ]
        ]
    },
    {
        "id": "1599b2b0.c5137d",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HMGET params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype];\nfor (i = 0; i < 4 ; i++) {\n    if (payload.keys[i]) {\n        msg.payload.push(payload.keys[i]);\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1060,
        "wires": [
            [
                "b75db1bc.0ec44"
            ]
        ]
    },
    {
        "id": "b75db1bc.0ec44",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hmget",
        "name": "",
        "topic": "",
        "x": 1230,
        "y": 1060,
        "wires": [
            [
                "d8e434f4.67e918"
            ]
        ]
    },
    {
        "id": "d8e434f4.67e918",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Synopsis JSON String",
        "func": "payload = msg.payload;\nmsg.payload = \"[\";\nfor (i = 0; i < payload.length; i++) {\n    msg.payload += payload[i] + \",\";\n}\nmsg.payload = msg.payload.substring(0, msg.payload.length - 1) + \"]\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 1114,
        "wires": [
            [
                "f43e6b37.1b74b8"
            ]
        ]
    },
    {
        "id": "f43e6b37.1b74b8",
        "type": "json",
        "z": "a4252285.86ddb",
        "name": "Synopsis JSON Object",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1200,
        "y": 1114,
        "wires": [
            [
                "a4789f11.a1346"
            ]
        ]
    },
    {
        "id": "a4789f11.a1346",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Make Synopsis Object",
        "func": "payload = msg.payload;\nmsg.payload = {\n    \"synopsis\": payload,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 1114,
        "wires": [
            [
                "b82e0bd1.1981e8"
            ]
        ]
    },
    {
        "id": "b82e0bd1.1981e8",
        "type": "join",
        "z": "a4252285.86ddb",
        "name": "JOIN Synopsis Data",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 780,
        "y": 1179,
        "wires": [
            [
                "e60babf4.d456b8"
            ]
        ]
    },
    {
        "id": "e60babf4.d456b8",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Format Synopsis Data",
        "func": "payload = msg.payload;\n\nmsg.payload = {\n    \"heading\": payload.datatype,\n    \"synopsis\": [],\n    \"token\": \"input token\"\n}\n\nfor (i = 0; i < payload.synopsis.length; i++) {\n    synopsis = {\n        \"dateCreated\": payload.synopsis[i].dateCreated,\n        \"source\": payload.synopsis[i].source,\n        \"sourceId\": payload.synopsis[i].sourceId,\n        \"text\": \"\"\n    };\n    switch(payload.datatype) {\n        case 'allergies':\n            synopsis.text = payload.synopsis[i].reaction;\n            break;\n        case 'medications':\n            synopsis.text = payload.synopsis[i].name;\n            break;\n        case 'problems':\n            synopsis.text = payload.synopsis[i].problem;\n            break;\n    }\n    msg.payload.synopsis.push(synopsis);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 1179,
        "wires": [
            [
                "e56cdf76.ad341"
            ]
        ]
    },
    {
        "id": "e56cdf76.ad341",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Synopsis Success",
        "statusCode": "",
        "headers": {},
        "x": 1710,
        "y": 1173,
        "wires": []
    },
    {
        "id": "cdae8d9d.c6429",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "Check the Result",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 980,
        "wires": [
            [
                "f2f911b4.83b5"
            ],
            [
                "7f2726b5.4699c8"
            ]
        ]
    },
    {
        "id": "f2f911b4.83b5",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"no data available\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 960,
        "wires": [
            [
                "e437e1b6.dc8c3"
            ]
        ]
    },
    {
        "id": "e437e1b6.dc8c3",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Synopsis Error",
        "statusCode": "400",
        "headers": {},
        "x": 1700,
        "y": 960,
        "wires": []
    },
    {
        "id": "b9b4e55f.3a8718",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HEXISTS params",
        "func": "payload = msg.payload\nmsg.payload = [payload.ptId+'.'+payload.datatype, payload.sourceId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 520,
        "wires": [
            [
                "f7264b55.539c58"
            ]
        ]
    },
    {
        "id": "f7264b55.539c58",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hexists",
        "name": "",
        "topic": "",
        "x": 930,
        "y": 520,
        "wires": [
            [
                "a7fa08a.cfd43f8"
            ]
        ]
    },
    {
        "id": "a7fa08a.cfd43f8",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 520,
        "wires": [
            [
                "46293577.9b16cc"
            ],
            [
                "7758f4ce.6ca16c"
            ]
        ]
    },
    {
        "id": "46293577.9b16cc",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot find data to update\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 500,
        "wires": [
            [
                "39a22c10.e89414"
            ]
        ]
    },
    {
        "id": "39a22c10.e89414",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Update Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 500,
        "wires": []
    },
    {
        "id": "7758f4ce.6ca16c",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Success JSON",
        "func": "msg.payload = {\n    result: \"exist\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 540,
        "wires": [
            [
                "79f8a86e.8ab6f8"
            ]
        ]
    },
    {
        "id": "79f8a86e.8ab6f8",
        "type": "join",
        "z": "a4252285.86ddb",
        "name": "Join Success Result",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 600,
        "wires": [
            [
                "79825b0c.60c504"
            ]
        ]
    },
    {
        "id": "bb0adf6b.99fe2",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"data doesn't exists\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 233,
        "wires": [
            [
                "aacd0284.3d1af"
            ]
        ]
    },
    {
        "id": "e4caca4c.8ced68",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/vitalsigns",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 162,
        "wires": [
            [
                "96904ae.49139b8"
            ]
        ]
    },
    {
        "id": "96904ae.49139b8",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "e9ce2306.6124e"
            ]
        ]
    },
    {
        "id": "cc4fb644.0bcd28",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/vitalsigns/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "49448519.7b661c"
            ]
        ]
    },
    {
        "id": "49448519.7b661c",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 380,
        "wires": [
            [
                "8cd5b328.f7605",
                "a7f31480.9434e8"
            ]
        ]
    },
    {
        "id": "3ff7c976.b979a6",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/vitalsigns/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "e4bb2d24.2bf9"
            ]
        ]
    },
    {
        "id": "e4bb2d24.2bf9",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 639,
        "wires": [
            [
                "b9b4e55f.3a8718",
                "79f8a86e.8ab6f8"
            ]
        ]
    },
    {
        "id": "6d02fd6d.2fe644",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/vitalsigns/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 860,
        "wires": [
            [
                "a69d865e.a18818"
            ]
        ]
    },
    {
        "id": "a69d865e.a18818",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 860,
        "wires": [
            [
                "3470d222.ae34ee"
            ]
        ]
    },
    {
        "id": "6235fd53.f39104",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1300,
        "wires": [
            [
                "54b3903e.edeb5",
                "503b145b.0f3f2c"
            ]
        ]
    },
    {
        "id": "29a707da.f49628",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1300,
        "wires": [
            [
                "6235fd53.f39104"
            ]
        ]
    },
    {
        "id": "54b3903e.edeb5",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient', payload.ptId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1280,
        "wires": [
            [
                "fbb85bfe.660338"
            ]
        ]
    },
    {
        "id": "503b145b.0f3f2c",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis SADD params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient.nameidx.' + payload.data.name.family, payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1320,
        "wires": [
            [
                "8cfbd8a2.4547a8"
            ]
        ]
    },
    {
        "id": "fbb85bfe.660338",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 950,
        "y": 1280,
        "wires": [
            [
                "27d1a719.7da8d8"
            ]
        ]
    },
    {
        "id": "27d1a719.7da8d8",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"save_data\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1170,
        "y": 1280,
        "wires": [
            [
                "9b01b3a5.e0df6"
            ]
        ]
    },
    {
        "id": "fbc3304f.5981f",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Create Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1300,
        "wires": []
    },
    {
        "id": "8cfbd8a2.4547a8",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "sadd",
        "name": "",
        "topic": "",
        "x": 950,
        "y": 1320,
        "wires": [
            [
                "c547bf65.3990a"
            ]
        ]
    },
    {
        "id": "c547bf65.3990a",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"save_name\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1170,
        "y": 1320,
        "wires": [
            [
                "9b01b3a5.e0df6"
            ]
        ]
    },
    {
        "id": "9b01b3a5.e0df6",
        "type": "join",
        "z": "a4252285.86ddb",
        "name": "Join Results",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1450,
        "y": 1300,
        "wires": [
            [
                "fbc3304f.5981f"
            ]
        ]
    },
    {
        "id": "51a9f820.8e0db8",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1540,
        "wires": [
            [
                "c745c41c.148ff8"
            ]
        ]
    },
    {
        "id": "c745c41c.148ff8",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1540,
        "wires": [
            [
                "96342e02.1a7e5",
                "c3a2d525.e28c68"
            ]
        ]
    },
    {
        "id": "96342e02.1a7e5",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HEXISTS params",
        "func": "payload = msg.payload\nmsg.payload = ['patient', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 1500,
        "wires": [
            [
                "6aa0b27f.02268c"
            ]
        ]
    },
    {
        "id": "c3a2d525.e28c68",
        "type": "join",
        "z": "a4252285.86ddb",
        "name": "Join Success Result",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 1600,
        "wires": [
            [
                "3a4a3164.330dde",
                "643000e7.9fe26"
            ]
        ]
    },
    {
        "id": "6aa0b27f.02268c",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hexists",
        "name": "",
        "topic": "",
        "x": 930,
        "y": 1500,
        "wires": [
            [
                "60106192.c4944"
            ]
        ]
    },
    {
        "id": "60106192.c4944",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 1500,
        "wires": [
            [
                "a604ebfd.9fc7b8"
            ],
            [
                "38b64064.d4775"
            ]
        ]
    },
    {
        "id": "38b64064.d4775",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Success JSON",
        "func": "msg.payload = {\n    result: \"exist\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 1520,
        "wires": [
            [
                "c3a2d525.e28c68"
            ]
        ]
    },
    {
        "id": "a604ebfd.9fc7b8",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot find data to update\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1480,
        "wires": [
            [
                "2df83367.67b6dc"
            ]
        ]
    },
    {
        "id": "2df83367.67b6dc",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Update Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 1480,
        "wires": []
    },
    {
        "id": "3a4a3164.330dde",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient', payload.ptId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 1580,
        "wires": [
            [
                "63092f2d.0a84a"
            ]
        ]
    },
    {
        "id": "643000e7.9fe26",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient.name', payload.ptId, payload.data.name.family];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 1620,
        "wires": [
            [
                "910f939f.5a0ae"
            ]
        ]
    },
    {
        "id": "910f939f.5a0ae",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1150,
        "y": 1620,
        "wires": [
            [
                "4d091e6e.4391c"
            ]
        ]
    },
    {
        "id": "63092f2d.0a84a",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1150,
        "y": 1580,
        "wires": [
            [
                "18c841d6.8440ae"
            ]
        ]
    },
    {
        "id": "18c841d6.8440ae",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"updated_data\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1580,
        "wires": [
            [
                "ef6c8d75.6c83e"
            ]
        ]
    },
    {
        "id": "4d091e6e.4391c",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"update_name\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1620,
        "wires": [
            [
                "ef6c8d75.6c83e"
            ]
        ]
    },
    {
        "id": "ef6c8d75.6c83e",
        "type": "join",
        "z": "a4252285.86ddb",
        "name": "Join Results",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1510,
        "y": 1600,
        "wires": [
            [
                "e5ca628f.7976d"
            ]
        ]
    },
    {
        "id": "e5ca628f.7976d",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Update Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1600,
        "wires": []
    },
    {
        "id": "3a3eda61.f62306",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HDEL params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1720,
        "wires": [
            [
                "c9f6b0b1.e61d2"
            ]
        ]
    },
    {
        "id": "920f9a9c.648b68",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1740,
        "wires": [
            [
                "3a3eda61.f62306",
                "4e454970.f8a208"
            ]
        ]
    },
    {
        "id": "3216b57.1dddb4a",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1740,
        "wires": [
            [
                "920f9a9c.648b68"
            ]
        ]
    },
    {
        "id": "c9f6b0b1.e61d2",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hdel",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 1720,
        "wires": [
            [
                "6518f160.3986d"
            ]
        ]
    },
    {
        "id": "6518f160.3986d",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1720,
        "wires": [
            [
                "70676fb9.a289"
            ],
            [
                "8bdd1f3d.b939d"
            ]
        ]
    },
    {
        "id": "70676fb9.a289",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data deleted successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1700,
        "wires": [
            [
                "61cb4335.80d14c"
            ]
        ]
    },
    {
        "id": "8bdd1f3d.b939d",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot delete data\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1740,
        "wires": [
            [
                "97ad02fb.deaac"
            ]
        ]
    },
    {
        "id": "61cb4335.80d14c",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Delete Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1700,
        "wires": []
    },
    {
        "id": "97ad02fb.deaac",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Delete Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 1740,
        "wires": []
    },
    {
        "id": "4e454970.f8a208",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HDEL params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient.name', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1760,
        "wires": [
            [
                "4ab60d27.719e84"
            ]
        ]
    },
    {
        "id": "4ab60d27.719e84",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hdel",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "87725107.7abc2",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1400,
        "wires": [
            [
                "5b04352e.251b5c"
            ]
        ]
    },
    {
        "id": "5b04352e.251b5c",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1400,
        "wires": [
            [
                "1f4e1587.50f0ea"
            ]
        ]
    },
    {
        "id": "1f4e1587.50f0ea",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HGET params",
        "func": "payload = msg.payload\nmsg.payload = ['patient', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1400,
        "wires": [
            [
                "5b84b240.41dcac"
            ]
        ]
    },
    {
        "id": "5b84b240.41dcac",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hget",
        "name": "",
        "topic": "",
        "x": 950,
        "y": 1400,
        "wires": [
            [
                "50020e2a.4115b"
            ]
        ]
    },
    {
        "id": "50020e2a.4115b",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 1400,
        "wires": [
            [
                "89053305.7e105"
            ],
            [
                "57d5a99a.c2af18"
            ]
        ]
    },
    {
        "id": "89053305.7e105",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"data doesn't exists\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 1373,
        "wires": [
            [
                "13dd9596.a1aa9a"
            ]
        ]
    },
    {
        "id": "13dd9596.a1aa9a",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "GET Data Error",
        "statusCode": "400",
        "headers": {},
        "x": 1700,
        "y": 1373,
        "wires": []
    },
    {
        "id": "57d5a99a.c2af18",
        "type": "json",
        "z": "a4252285.86ddb",
        "name": "Database JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1380,
        "y": 1420,
        "wires": [
            [
                "255e6ac3.878b46"
            ]
        ]
    },
    {
        "id": "255e6ac3.878b46",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "GET Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1420,
        "wires": []
    },
    {
        "id": "85944f6.9d247b",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/synopsis/vitalsigns",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1100,
        "wires": [
            [
                "f7cf77b5.98ce88"
            ]
        ]
    },
    {
        "id": "f7cf77b5.98ce88",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1100,
        "wires": [
            [
                "f754fca5.24db",
                "3d53e3a4.e56adc",
                "b82e0bd1.1981e8"
            ]
        ]
    },
    {
        "id": "f2e6be1a.eefe9",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/patient/:ptId/vitalsigns",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 2220,
        "wires": [
            [
                "5532e0a0.e1246"
            ]
        ]
    },
    {
        "id": "5532e0a0.e1246",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2220,
        "wires": [
            [
                "3921d93e.b28716"
            ]
        ]
    },
    {
        "id": "3921d93e.b28716",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis HGET params",
        "func": "payload = msg.payload\nmsg.payload = [payload.ptId+'.'+payload.datatype];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 2220,
        "wires": [
            [
                "f603e3a9.564c1"
            ]
        ]
    },
    {
        "id": "f603e3a9.564c1",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hgetall",
        "name": "",
        "topic": "",
        "x": 850,
        "y": 2220,
        "wires": [
            [
                "49e3c62c.0a4808"
            ]
        ]
    },
    {
        "id": "49e3c62c.0a4808",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 2220,
        "wires": [
            [
                "ef96e8a0.fd8e98"
            ],
            [
                "79d6c56c.6646ec"
            ]
        ]
    },
    {
        "id": "ef96e8a0.fd8e98",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"data doesn't exists\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 2160,
        "wires": [
            [
                "23b0450c.66c0ba"
            ]
        ]
    },
    {
        "id": "23b0450c.66c0ba",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "GET Data Error",
        "statusCode": "400",
        "headers": {},
        "x": 1400,
        "y": 2160,
        "wires": []
    },
    {
        "id": "79d6c56c.6646ec",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Generate VitalSigns List",
        "func": "payload = msg.payload;\n\nmsg.payload = [];\n\nObject.values(payload).forEach(value => {\n  msg.payload.push(JSON.parse(value));\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 2240,
        "wires": [
            [
                "2e6010e8.df1b3"
            ]
        ]
    },
    {
        "id": "2e6010e8.df1b3",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "Synopsis List Success",
        "statusCode": "",
        "headers": {},
        "x": 1560,
        "y": 2240,
        "wires": []
    },
    {
        "id": "aedf1bf3.24ec28",
        "type": "http in",
        "z": "a4252285.86ddb",
        "name": "",
        "url": "/mpi/patient",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1900,
        "wires": [
            [
                "5322eba7.e81ea4"
            ]
        ]
    },
    {
        "id": "5322eba7.e81ea4",
        "type": "change",
        "z": "a4252285.86ddb",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"name\": msg.req.query.name\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1900,
        "wires": [
            [
                "5087795b.a56848"
            ]
        ]
    },
    {
        "id": "5087795b.a56848",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Redis KEYS params",
        "func": "\nmsg.payload = [\"patient.nameidx.*\"+msg.payload.name+\"*\"];\nglobal.set('ptIds', []);\nglobal.set('patientList', []);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 1900,
        "wires": [
            [
                "f936a5f5.2d36e8"
            ]
        ]
    },
    {
        "id": "f936a5f5.2d36e8",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "keys",
        "name": "",
        "topic": "",
        "x": 810,
        "y": 1900,
        "wires": [
            [
                "e236a84d.500438"
            ]
        ]
    },
    {
        "id": "6c860f8b.02897",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Iterate Keys",
        "func": "var keys = global.get('keys');\nvar itr = global.get('itr');\n\nif (itr < keys.length) {\n    msg.payload = [keys[itr]];\n    return msg;\n}\n\nmsg.payload = 'finished';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1230,
        "y": 1900,
        "wires": [
            [
                "71c62a69.511934"
            ]
        ]
    },
    {
        "id": "36977f47.18a87",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "smembers",
        "name": "",
        "topic": "",
        "x": 1110,
        "y": 1820,
        "wires": [
            [
                "73301852.cf5b18"
            ]
        ]
    },
    {
        "id": "73301852.cf5b18",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Add Patient Ids",
        "func": "curIds = global.get('ptIds');\ncurIds = curIds.concat(msg.payload);\nglobal.set('ptIds', curIds);\nglobal.set('itr', global.get('itr') + 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 1820,
        "wires": [
            [
                "6c860f8b.02897"
            ]
        ]
    },
    {
        "id": "71c62a69.511934",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "finished",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 1900,
        "wires": [
            [
                "36977f47.18a87"
            ],
            [
                "9a04aca1.84b9d"
            ]
        ]
    },
    {
        "id": "a3e40b42.808c28",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Iterate Patient Ids",
        "func": "\nptIds = global.get('ptIds');\nitr = global.get('itr');\n\nif (itr < ptIds.length) {\n    msg.payload = [\"patient\", ptIds[itr]];\n    return msg;\n}\n\nmsg.payload = 'finished';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1810,
        "y": 2000,
        "wires": [
            [
                "dedf9a1a.1cc478"
            ]
        ]
    },
    {
        "id": "dedf9a1a.1cc478",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "finished",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1990,
        "y": 2000,
        "wires": [
            [
                "19048ac9.6545e5"
            ],
            [
                "ec12e9b7.2f2388"
            ]
        ]
    },
    {
        "id": "19048ac9.6545e5",
        "type": "redis-command",
        "z": "a4252285.86ddb",
        "server": "89248eb9.e979f",
        "command": "hget",
        "name": "",
        "topic": "",
        "x": 1650,
        "y": 1860,
        "wires": [
            [
                "2048dbd0.070904"
            ]
        ]
    },
    {
        "id": "2048dbd0.070904",
        "type": "switch",
        "z": "a4252285.86ddb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1790,
        "y": 1860,
        "wires": [
            [
                "9afa3147.d1ffa"
            ]
        ]
    },
    {
        "id": "9afa3147.d1ffa",
        "type": "json",
        "z": "a4252285.86ddb",
        "name": "Database JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1940,
        "y": 1860,
        "wires": [
            [
                "ad655830.027a58"
            ]
        ]
    },
    {
        "id": "ad655830.027a58",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Add Patient Data",
        "func": "\npatientList = global.get('patientList');\n\npatientList.push(msg.payload);\n\nglobal.set('patientList', patientList);\n\nglobal.set('itr', global.get('itr') + 1);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2150,
        "y": 1860,
        "wires": [
            [
                "a3e40b42.808c28"
            ]
        ]
    },
    {
        "id": "ec12e9b7.2f2388",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Result JSON",
        "func": "msg.payload = global.get('patientList');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2170,
        "y": 2000,
        "wires": [
            [
                "28bd3ed4.6ca252"
            ]
        ]
    },
    {
        "id": "28bd3ed4.6ca252",
        "type": "http response",
        "z": "a4252285.86ddb",
        "name": "GET Patient List",
        "statusCode": "400",
        "headers": {},
        "x": 2360,
        "y": 2000,
        "wires": []
    },
    {
        "id": "e236a84d.500438",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Initialize Loop",
        "func": "global.set('itr', 0);\nglobal.set('keys', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 1900,
        "wires": [
            [
                "6c860f8b.02897"
            ]
        ]
    },
    {
        "id": "9a04aca1.84b9d",
        "type": "function",
        "z": "a4252285.86ddb",
        "name": "Initialize Loop",
        "func": "global.set('itr', 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1580,
        "y": 2000,
        "wires": [
            [
                "a3e40b42.808c28"
            ]
        ]
    }
]