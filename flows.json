[
    {
        "id": "41fae537.ef571c",
        "type": "tab",
        "label": "JSON-REDIS-TEST",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c690d9f4.501db8",
        "type": "tab",
        "label": "JSON-REDIS-SECOND",
        "disabled": false,
        "info": "A simple API implementation for JSON data transformation.\nJSON data is stored in Redis Database."
    },
    {
        "id": "89248eb9.e979f",
        "type": "redis-config",
        "z": "",
        "host": "172.17.0.3",
        "port": "{{REDIS_PORT_6379_TCP_PORT}}",
        "dbase": "{{REDIS_DB}}",
        "pass": "X6NvLgr5NJ/INEuzt6mxP5QdTyK+2ZQiXwwtaj8Mipy97SRM1pj6dK734XmoFZrNg5+b8kpO54cIPTVkdeveloper@ubuntu"
    },
    {
        "id": "22e7d6ff.867c1a",
        "type": "ui_group",
        "z": "",
        "name": "Times",
        "tab": "8cfd7aad.920828",
        "order": 2,
        "disp": false,
        "width": "4"
    },
    {
        "id": "f8954383.42769",
        "type": "ui_group",
        "z": "",
        "name": "Modes",
        "tab": "8cfd7aad.920828",
        "order": 3,
        "disp": false,
        "width": "1"
    },
    {
        "id": "8cfd7aad.920828",
        "type": "ui_tab",
        "z": "",
        "name": "Maestro Protos",
        "icon": "loop",
        "order": 2
    },
    {
        "id": "f37b2107.7518c",
        "type": "ui_group",
        "z": "",
        "name": "Timer A",
        "tab": "8cfd7aad.920828",
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a0391cff.f70c7",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "24428b6c.83bca4",
        "type": "ui_group",
        "z": "",
        "name": "Blinking LED",
        "tab": "d1567a59.3c3ec8",
        "disp": true,
        "width": "6"
    },
    {
        "id": "d1567a59.3c3ec8",
        "type": "ui_tab",
        "z": "",
        "name": "Blinking LED",
        "icon": "dashboard"
    },
    {
        "id": "fb6328e1.778858",
        "type": "ui_group",
        "z": "",
        "name": "Modes",
        "tab": "f9d21cef.46f4e",
        "order": 3,
        "disp": false,
        "width": "1"
    },
    {
        "id": "f9d21cef.46f4e",
        "type": "ui_tab",
        "z": "",
        "name": "Revolution Commander",
        "icon": "loop",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "43a77a82.e8f854",
        "type": "ui_group",
        "z": "",
        "name": "Times",
        "tab": "f9d21cef.46f4e",
        "order": 2,
        "disp": false,
        "width": "4"
    },
    {
        "id": "2d0f7f4f.4b419",
        "type": "ui_group",
        "z": "",
        "name": "Modes",
        "tab": "4ccc284a.36d258",
        "order": 3,
        "disp": false,
        "width": "1"
    },
    {
        "id": "4ccc284a.36d258",
        "type": "ui_tab",
        "z": "",
        "name": "Revolution Commander",
        "icon": "loop",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5739b86e.9e8578",
        "type": "ui_group",
        "z": "",
        "name": "Times",
        "tab": "4ccc284a.36d258",
        "order": 2,
        "disp": false,
        "width": "4"
    },
    {
        "id": "7ee9a559.2bf3ac",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/allergies/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "c2c7e550.415468"
            ]
        ]
    },
    {
        "id": "c2c7e550.415468",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "2b507d69.2fec22",
                "529b0ebe.1f8dc"
            ]
        ]
    },
    {
        "id": "5dba49c3.caf588",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hget",
        "name": "",
        "topic": "",
        "x": 890,
        "y": 240,
        "wires": [
            [
                "ce16a2b0.a2ccf"
            ]
        ]
    },
    {
        "id": "2b507d69.2fec22",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HGET params",
        "func": "payload = msg.payload\nmsg.payload = [payload.ptId+'.'+payload.datatype, payload.sourceId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 240,
        "wires": [
            [
                "5dba49c3.caf588"
            ]
        ]
    },
    {
        "id": "15b7cf0.618af31",
        "type": "json",
        "z": "c690d9f4.501db8",
        "name": "Database JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 900,
        "y": 300,
        "wires": [
            [
                "afca5379.d3324"
            ]
        ]
    },
    {
        "id": "4db236d0.249258",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "GET Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 360,
        "wires": []
    },
    {
        "id": "41902a1b.b0fc84",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Create Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 80,
        "wires": []
    },
    {
        "id": "529b0ebe.1f8dc",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Transform method",
        "func": "msg.payload = {transform: msg.payload.transform ? msg.payload.transform : ''};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 360,
        "wires": [
            [
                "afca5379.d3324"
            ]
        ]
    },
    {
        "id": "afca5379.d3324",
        "type": "join",
        "z": "c690d9f4.501db8",
        "name": "Add transform method",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 920,
        "y": 360,
        "wires": [
            [
                "882852eb.6abb"
            ]
        ]
    },
    {
        "id": "882852eb.6abb",
        "type": "switch",
        "z": "c690d9f4.501db8",
        "name": "Transform Switch",
        "property": "payload.transform",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "TransformA-Allergy-UI2openEHR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TransformB-Allergy-UI2FHIR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1150,
        "y": 360,
        "wires": [
            [
                "d63847e3.de72f8"
            ],
            [
                "a7badbf3.ae08a8"
            ],
            [
                "d6cb18f2.9e85f8"
            ]
        ]
    },
    {
        "id": "d63847e3.de72f8",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "TransformA-Allergy-UI2openEHR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"allergies_and_adverse_reactions\": {\t      \"adverse_reaction_risk\": {\t        \"causative_agent\": {\t          \"value\": msg.payload.cause,\t          \"code\": msg.payload.causeCode,\t          \"terminology\": msg.payload.causeTerminology\t        },\t        \"reaction_details\": {\t          \"manifestation\": {\t            \"code\": msg.payload.terminologyCode,\t            \"value\": msg.payload.reaction\t          }\t        }\t      }\t    },\t    \"composer\": {\t      \"value\": msg.payload.author\t    },\t    \"start_time\": $fromMillis(msg.payload.dateCreated),\t    \"host\": msg.payload.source,\t    \"uid\": msg.payload.sourceId,\t    \"patientId\": msg.payload.patientId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 320,
        "wires": [
            [
                "4db236d0.249258"
            ]
        ]
    },
    {
        "id": "a7badbf3.ae08a8",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "TransformB-Allergy-UI2FHIR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"resourceType\": \"AllergyIntolerance\",\t    \"identifier\": [\t      {\t        \"system\": msg.payload.source,\t        \"value\": msg.payload.sourceId\t      }\t    ],\t    \"onset\": $fromMillis(msg.payload.dateCreated),\t    \"recordedDate\": $fromMillis(msg.payload.dateCreated),\t    \"recorder\": {\t      \"reference\": \"GMC Doctor\",\t      \"display\": msg.payload.author\t    },\t    \"patient\": {\t      \"reference\": \"=> fhirReference(patientId, 'Patient', false)\",\t      \"display\": \"{{patientName}}\"\t    },\t    \"substance\": {\t      \"coding\": [\t        {\t          \"system\": msg.payload.causeCode,\t          \"code\": msg.payload.causeTerminology,\t          \"display\": msg.payload.cause\t        }\t      ]\t    },\t    \"status\": \"active\",\t    \"type\": \"allergy\",\t    \"category\": \"other\",\t    \"reaction\": [\t      {\t        \"substance\": {\t          \"coding\": [\t            {\t              \"system\": msg.payload.causeCode,\t              \"code\": msg.payload.causeTerminology,\t              \"display\": msg.payload.cause\t            }\t          ],\t          \"text\": msg.payload.ause\t        },\t        \"certainty\": \"confirmed\",\t        \"manifestation\": [\t          {\t            \"coding\": [\t              {\t                \"system\": msg.payload.terminologyCode,\t                \"code\": \"TBC\",\t                \"display\": msg.payload.reaction\t              }\t            ],\t            \"text\": msg.payload.reaction\t          }\t        ],\t        \"description\": msg.payload.reaction\t      }\t    ],\t    \"note\": msg.payload.reaction\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 360,
        "wires": [
            [
                "4db236d0.249258"
            ]
        ]
    },
    {
        "id": "8b0ef5f5.8d9318",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/problems/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "fb9249ae.515158"
            ]
        ]
    },
    {
        "id": "fb9249ae.515158",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "2b507d69.2fec22",
                "529b0ebe.1f8dc"
            ]
        ]
    },
    {
        "id": "ef14673f.22b1b8",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/medications/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "40e580a9.8663"
            ]
        ]
    },
    {
        "id": "40e580a9.8663",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 300,
        "wires": [
            [
                "2b507d69.2fec22",
                "529b0ebe.1f8dc"
            ]
        ]
    },
    {
        "id": "d6cb18f2.9e85f8",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "No Transform",
        "func": "msg.payload = msg.payload;\ndelete msg.payload.transform;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 400,
        "wires": [
            [
                "4db236d0.249258"
            ]
        ]
    },
    {
        "id": "ce16a2b0.a2ccf",
        "type": "switch",
        "z": "c690d9f4.501db8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 240,
        "wires": [
            [
                "48dc6d56.40a614"
            ],
            [
                "15b7cf0.618af31"
            ]
        ]
    },
    {
        "id": "75b83cdb.555d44",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "GET Data Error",
        "statusCode": "400",
        "headers": {},
        "x": 1700,
        "y": 233,
        "wires": []
    },
    {
        "id": "3619971c.388fd8",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/allergies",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "9f9ba1b8.d4bba"
            ]
        ]
    },
    {
        "id": "9f9ba1b8.d4bba",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 40,
        "wires": [
            [
                "9b305baf.fdc568"
            ]
        ]
    },
    {
        "id": "a6e1381f.1fd378",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 80,
        "wires": [
            [
                "9b305baf.fdc568"
            ]
        ]
    },
    {
        "id": "9778df5c.6d3bf",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/medications",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "a6e1381f.1fd378"
            ]
        ]
    },
    {
        "id": "77778e8e.656ab",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 121,
        "wires": [
            [
                "9b305baf.fdc568"
            ]
        ]
    },
    {
        "id": "3b8b89b7.cdc566",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/problems",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 121,
        "wires": [
            [
                "77778e8e.656ab"
            ]
        ]
    },
    {
        "id": "9b305baf.fdc568",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Add Source ID to Data",
        "func": "newid = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\nmsg.payload.data.id = newid;\nmsg.payload.data.sourceId = newid;\nmsg.payload.data.source = \"ethercis\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 80,
        "wires": [
            [
                "148d8369.57748d"
            ]
        ]
    },
    {
        "id": "148d8369.57748d",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype, payload.data.sourceId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 80,
        "wires": [
            [
                "4313939a.19056c"
            ]
        ]
    },
    {
        "id": "4313939a.19056c",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1130,
        "y": 80,
        "wires": [
            [
                "e3080f69.49607"
            ]
        ]
    },
    {
        "id": "e3080f69.49607",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data created successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 80,
        "wires": [
            [
                "41902a1b.b0fc84"
            ]
        ]
    },
    {
        "id": "5794321d.b2248c",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/allergies/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "7540034d.95748c"
            ]
        ]
    },
    {
        "id": "37283da4.1d0ca2",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/medications/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "4fdb1049.cda59"
            ]
        ]
    },
    {
        "id": "f74bc52f.f8a9b8",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/problems/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 601,
        "wires": [
            [
                "9c1e20b9.5f525"
            ]
        ]
    },
    {
        "id": "9c1e20b9.5f525",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "ce7171b7.f9a27",
                "92476172.92db7"
            ]
        ]
    },
    {
        "id": "4fdb1049.cda59",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 560,
        "wires": [
            [
                "ce7171b7.f9a27",
                "92476172.92db7"
            ]
        ]
    },
    {
        "id": "7540034d.95748c",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 520,
        "wires": [
            [
                "ce7171b7.f9a27",
                "92476172.92db7"
            ]
        ]
    },
    {
        "id": "b3000113.831e8",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype, payload.sourceId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 600,
        "wires": [
            [
                "a2b560ca.474dd"
            ]
        ]
    },
    {
        "id": "a2b560ca.474dd",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1150,
        "y": 600,
        "wires": [
            [
                "ff9b01dc.5d36e"
            ]
        ]
    },
    {
        "id": "ff9b01dc.5d36e",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data updated successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 600,
        "wires": [
            [
                "877669b5.28d5a8"
            ]
        ]
    },
    {
        "id": "877669b5.28d5a8",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Update Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 600,
        "wires": []
    },
    {
        "id": "71a79813.23f0b8",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/allergies/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 740,
        "wires": [
            [
                "c30cf42b.5e2218"
            ]
        ]
    },
    {
        "id": "5df3a756.e66758",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/medications/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 780,
        "wires": [
            [
                "2f520ba2.1858d4"
            ]
        ]
    },
    {
        "id": "63fa255.d0d6adc",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/problems/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 821,
        "wires": [
            [
                "f9ce0344.0a894"
            ]
        ]
    },
    {
        "id": "f9ce0344.0a894",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 820,
        "wires": [
            [
                "a675b094.affc5"
            ]
        ]
    },
    {
        "id": "2f520ba2.1858d4",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 780,
        "wires": [
            [
                "a675b094.affc5"
            ]
        ]
    },
    {
        "id": "c30cf42b.5e2218",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 740,
        "wires": [
            [
                "a675b094.affc5"
            ]
        ]
    },
    {
        "id": "a675b094.affc5",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HDEL params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype, payload.sourceId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 780,
        "wires": [
            [
                "76286427.2bfbac"
            ]
        ]
    },
    {
        "id": "76286427.2bfbac",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hdel",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 780,
        "wires": [
            [
                "d1897f84.3caa6"
            ]
        ]
    },
    {
        "id": "60447b60.d34b44",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data deleted successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 760,
        "wires": [
            [
                "73ca14cb.d8372c"
            ]
        ]
    },
    {
        "id": "73ca14cb.d8372c",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Delete Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 760,
        "wires": []
    },
    {
        "id": "d1897f84.3caa6",
        "type": "switch",
        "z": "c690d9f4.501db8",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "60447b60.d34b44"
            ],
            [
                "8b4e1a52.8ef1f8"
            ]
        ]
    },
    {
        "id": "8b4e1a52.8ef1f8",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot delete data\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 800,
        "wires": [
            [
                "a62b57fa.321378"
            ]
        ]
    },
    {
        "id": "a62b57fa.321378",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Delete Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 800,
        "wires": []
    },
    {
        "id": "65224291.2910fc",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/synopsis/allergies/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "63a74741.f8c018"
            ]
        ]
    },
    {
        "id": "63a74741.f8c018",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 980,
        "wires": [
            [
                "9396993f.224268",
                "c8d0be35.61b53",
                "d175b464.e533a8"
            ]
        ]
    },
    {
        "id": "4a9d6698.e622b8",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/synopsis/problems",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "e2c35f98.10122"
            ]
        ]
    },
    {
        "id": "e2c35f98.10122",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "9396993f.224268",
                "c8d0be35.61b53",
                "d175b464.e533a8"
            ]
        ]
    },
    {
        "id": "bcdf4a29.456f18",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/synopsis/medications",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "b01339dc.6df348"
            ]
        ]
    },
    {
        "id": "b01339dc.6df348",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "9396993f.224268",
                "c8d0be35.61b53",
                "d175b464.e533a8"
            ]
        ]
    },
    {
        "id": "9396993f.224268",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HKEYS params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 980,
        "wires": [
            [
                "41d30cc5.6ba874"
            ]
        ]
    },
    {
        "id": "41d30cc5.6ba874",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hkeys",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 980,
        "wires": [
            [
                "b2efeeb0.0d7de"
            ]
        ]
    },
    {
        "id": "c8d0be35.61b53",
        "type": "join",
        "z": "c690d9f4.501db8",
        "name": "JOIN Keys Data",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 760,
        "y": 1060,
        "wires": [
            [
                "754b3042.ed095"
            ]
        ]
    },
    {
        "id": "9caa8e2b.b6464",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "Keys JSON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"keys\":msg.payload\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1000,
        "wires": [
            [
                "c8d0be35.61b53"
            ]
        ]
    },
    {
        "id": "754b3042.ed095",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HMGET params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype];\nfor (i = 0; i < 4 ; i++) {\n    if (payload.keys[i]) {\n        msg.payload.push(payload.keys[i]);\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1060,
        "wires": [
            [
                "28f2df82.fd372"
            ]
        ]
    },
    {
        "id": "28f2df82.fd372",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hmget",
        "name": "",
        "topic": "",
        "x": 1230,
        "y": 1060,
        "wires": [
            [
                "5d91a000.f3308"
            ]
        ]
    },
    {
        "id": "5d91a000.f3308",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Synopsis JSON String",
        "func": "payload = msg.payload;\nmsg.payload = \"[\";\nfor (i = 0; i < payload.length; i++) {\n    msg.payload += payload[i] + \",\";\n}\nmsg.payload = msg.payload.substring(0, msg.payload.length - 1) + \"]\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 1114,
        "wires": [
            [
                "7908cc19.5e09a4"
            ]
        ]
    },
    {
        "id": "7908cc19.5e09a4",
        "type": "json",
        "z": "c690d9f4.501db8",
        "name": "Synopsis JSON Object",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1200,
        "y": 1114,
        "wires": [
            [
                "9a265d7d.e42"
            ]
        ]
    },
    {
        "id": "9a265d7d.e42",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Make Synopsis Object",
        "func": "payload = msg.payload;\nmsg.payload = {\n    \"synopsis\": payload,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 1114,
        "wires": [
            [
                "d175b464.e533a8"
            ]
        ]
    },
    {
        "id": "d175b464.e533a8",
        "type": "join",
        "z": "c690d9f4.501db8",
        "name": "JOIN Synopsis Data",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 780,
        "y": 1179,
        "wires": [
            [
                "2a82c94.f517f36"
            ]
        ]
    },
    {
        "id": "2a82c94.f517f36",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Format Synopsis Data",
        "func": "payload = msg.payload;\n\nmsg.payload = {\n    \"heading\": payload.datatype,\n    \"synopsis\": [],\n    \"token\": \"input token\"\n}\n\nfor (i = 0; i < payload.synopsis.length; i++) {\n    synopsis = {\n        \"dateCreated\": payload.synopsis[i].dateCreated,\n        \"source\": payload.synopsis[i].source,\n        \"sourceId\": payload.synopsis[i].sourceId,\n        \"text\": \"\"\n    };\n    switch(payload.datatype) {\n        case 'allergies':\n            synopsis.text = payload.synopsis[i].reaction;\n            break;\n        case 'medications':\n            synopsis.text = payload.synopsis[i].name;\n            break;\n        case 'problems':\n            synopsis.text = payload.synopsis[i].problem;\n            break;\n    }\n    msg.payload.synopsis.push(synopsis);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 1179,
        "wires": [
            [
                "e7a78669.0d4758"
            ]
        ]
    },
    {
        "id": "e7a78669.0d4758",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Synopsis Success",
        "statusCode": "",
        "headers": {},
        "x": 1710,
        "y": 1173,
        "wires": []
    },
    {
        "id": "b2efeeb0.0d7de",
        "type": "switch",
        "z": "c690d9f4.501db8",
        "name": "Check the Result",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 980,
        "wires": [
            [
                "a0386deb.4026d"
            ],
            [
                "9caa8e2b.b6464"
            ]
        ]
    },
    {
        "id": "a0386deb.4026d",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"no data available\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 960,
        "wires": [
            [
                "b5ad1f4f.3f7d7"
            ]
        ]
    },
    {
        "id": "b5ad1f4f.3f7d7",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Synopsis Error",
        "statusCode": "400",
        "headers": {},
        "x": 1700,
        "y": 960,
        "wires": []
    },
    {
        "id": "ce7171b7.f9a27",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HEXISTS params",
        "func": "payload = msg.payload\nmsg.payload = [payload.ptId+'.'+payload.datatype, payload.sourceId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 520,
        "wires": [
            [
                "3df0688d.1a86e8"
            ]
        ]
    },
    {
        "id": "3df0688d.1a86e8",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hexists",
        "name": "",
        "topic": "",
        "x": 930,
        "y": 520,
        "wires": [
            [
                "a48722ae.67fd9"
            ]
        ]
    },
    {
        "id": "a48722ae.67fd9",
        "type": "switch",
        "z": "c690d9f4.501db8",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 520,
        "wires": [
            [
                "c60b72b.230279"
            ],
            [
                "705fbc4e.fa9284"
            ]
        ]
    },
    {
        "id": "c60b72b.230279",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot find data to update\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 500,
        "wires": [
            [
                "5b0a59e8.8025c8"
            ]
        ]
    },
    {
        "id": "5b0a59e8.8025c8",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Update Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 500,
        "wires": []
    },
    {
        "id": "705fbc4e.fa9284",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Success JSON",
        "func": "msg.payload = {\n    result: \"exist\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 540,
        "wires": [
            [
                "92476172.92db7"
            ]
        ]
    },
    {
        "id": "92476172.92db7",
        "type": "join",
        "z": "c690d9f4.501db8",
        "name": "Join Success Result",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 600,
        "wires": [
            [
                "b3000113.831e8"
            ]
        ]
    },
    {
        "id": "48dc6d56.40a614",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"data doesn't exists\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 233,
        "wires": [
            [
                "75b83cdb.555d44"
            ]
        ]
    },
    {
        "id": "a08be2f4.807b3",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/vitalsigns",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 162,
        "wires": [
            [
                "3e5e6dac.d4cda2"
            ]
        ]
    },
    {
        "id": "3e5e6dac.d4cda2",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "9b305baf.fdc568"
            ]
        ]
    },
    {
        "id": "3334975c.8f7a28",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/vitalsigns/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "27c67c56.3139b4"
            ]
        ]
    },
    {
        "id": "27c67c56.3139b4",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 380,
        "wires": [
            [
                "2b507d69.2fec22",
                "529b0ebe.1f8dc"
            ]
        ]
    },
    {
        "id": "1325a610.9b693a",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/vitalsigns/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "d6fb874.0b80f78"
            ]
        ]
    },
    {
        "id": "d6fb874.0b80f78",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 639,
        "wires": [
            [
                "ce7171b7.f9a27",
                "92476172.92db7"
            ]
        ]
    },
    {
        "id": "fe178fc0.bd25a",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/vitalsigns/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 860,
        "wires": [
            [
                "7419950f.4f9cdc"
            ]
        ]
    },
    {
        "id": "7419950f.4f9cdc",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 860,
        "wires": [
            [
                "a675b094.affc5"
            ]
        ]
    },
    {
        "id": "68a41dc5.ebe004",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1300,
        "wires": [
            [
                "73191dc9.dacf34",
                "9e5d4e25.20f71"
            ]
        ]
    },
    {
        "id": "ff1bbfc7.4d56d",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1300,
        "wires": [
            [
                "68a41dc5.ebe004"
            ]
        ]
    },
    {
        "id": "73191dc9.dacf34",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient', payload.ptId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1280,
        "wires": [
            [
                "ed97a5b0.b86838"
            ]
        ]
    },
    {
        "id": "9e5d4e25.20f71",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient.name', payload.ptId, payload.data.name.family];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1320,
        "wires": [
            [
                "55d3ae99.1ed66"
            ]
        ]
    },
    {
        "id": "ed97a5b0.b86838",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 950,
        "y": 1280,
        "wires": [
            [
                "a06280a5.a8f1a"
            ]
        ]
    },
    {
        "id": "a06280a5.a8f1a",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"save_data\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1170,
        "y": 1280,
        "wires": [
            [
                "d1be5901.09aee8"
            ]
        ]
    },
    {
        "id": "b98b77e9.435cd8",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Create Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1300,
        "wires": []
    },
    {
        "id": "55d3ae99.1ed66",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 950,
        "y": 1320,
        "wires": [
            [
                "40069d1.ad8cc64"
            ]
        ]
    },
    {
        "id": "40069d1.ad8cc64",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"save_name\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1170,
        "y": 1320,
        "wires": [
            [
                "d1be5901.09aee8"
            ]
        ]
    },
    {
        "id": "d1be5901.09aee8",
        "type": "join",
        "z": "c690d9f4.501db8",
        "name": "Join Results",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1450,
        "y": 1300,
        "wires": [
            [
                "b98b77e9.435cd8"
            ]
        ]
    },
    {
        "id": "21d32fe9.b9187",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1540,
        "wires": [
            [
                "250dde5.7955822"
            ]
        ]
    },
    {
        "id": "250dde5.7955822",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1540,
        "wires": [
            [
                "d3082de1.44942",
                "72da6747.932548"
            ]
        ]
    },
    {
        "id": "d3082de1.44942",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HEXISTS params",
        "func": "payload = msg.payload\nmsg.payload = ['patient', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 1500,
        "wires": [
            [
                "7256b3a7.96fd2c"
            ]
        ]
    },
    {
        "id": "72da6747.932548",
        "type": "join",
        "z": "c690d9f4.501db8",
        "name": "Join Success Result",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 1600,
        "wires": [
            [
                "1016236d.61f3dd",
                "c4083aaf.cdc668"
            ]
        ]
    },
    {
        "id": "7256b3a7.96fd2c",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hexists",
        "name": "",
        "topic": "",
        "x": 930,
        "y": 1500,
        "wires": [
            [
                "2ecdfa5d.538fc6"
            ]
        ]
    },
    {
        "id": "2ecdfa5d.538fc6",
        "type": "switch",
        "z": "c690d9f4.501db8",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 1500,
        "wires": [
            [
                "25f9c22a.5926de"
            ],
            [
                "1f8bb087.0222bf"
            ]
        ]
    },
    {
        "id": "1f8bb087.0222bf",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Success JSON",
        "func": "msg.payload = {\n    result: \"exist\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 1520,
        "wires": [
            [
                "72da6747.932548"
            ]
        ]
    },
    {
        "id": "25f9c22a.5926de",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot find data to update\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1480,
        "wires": [
            [
                "83d6b773.c5db18"
            ]
        ]
    },
    {
        "id": "83d6b773.c5db18",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Update Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 1480,
        "wires": []
    },
    {
        "id": "1016236d.61f3dd",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient', payload.ptId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 1580,
        "wires": [
            [
                "77fc7f44.9890b"
            ]
        ]
    },
    {
        "id": "c4083aaf.cdc668",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient.name', payload.ptId, payload.data.name.family];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 1620,
        "wires": [
            [
                "11fc698c.b23876"
            ]
        ]
    },
    {
        "id": "11fc698c.b23876",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1150,
        "y": 1620,
        "wires": [
            [
                "ff361381.47ac7"
            ]
        ]
    },
    {
        "id": "77fc7f44.9890b",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1150,
        "y": 1580,
        "wires": [
            [
                "4869025d.89e60c"
            ]
        ]
    },
    {
        "id": "4869025d.89e60c",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"updated_data\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1580,
        "wires": [
            [
                "71d6cd8d.a138b4"
            ]
        ]
    },
    {
        "id": "ff361381.47ac7",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"update_name\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1620,
        "wires": [
            [
                "71d6cd8d.a138b4"
            ]
        ]
    },
    {
        "id": "71d6cd8d.a138b4",
        "type": "join",
        "z": "c690d9f4.501db8",
        "name": "Join Results",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1510,
        "y": 1600,
        "wires": [
            [
                "ab7a2e4b.89f42"
            ]
        ]
    },
    {
        "id": "ab7a2e4b.89f42",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Update Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1600,
        "wires": []
    },
    {
        "id": "416d9538.40c97c",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HDEL params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1720,
        "wires": [
            [
                "e75c8bf9.93e198"
            ]
        ]
    },
    {
        "id": "38b989a6.23d5f6",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1740,
        "wires": [
            [
                "416d9538.40c97c",
                "f1641f0d.7f77c"
            ]
        ]
    },
    {
        "id": "235890b5.f608f",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1740,
        "wires": [
            [
                "38b989a6.23d5f6"
            ]
        ]
    },
    {
        "id": "e75c8bf9.93e198",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hdel",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 1720,
        "wires": [
            [
                "d8225a38.742438"
            ]
        ]
    },
    {
        "id": "d8225a38.742438",
        "type": "switch",
        "z": "c690d9f4.501db8",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1720,
        "wires": [
            [
                "9c9cab48.282d68"
            ],
            [
                "abc9c1df.425bf"
            ]
        ]
    },
    {
        "id": "9c9cab48.282d68",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data deleted successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1700,
        "wires": [
            [
                "6153f8ac.abbf68"
            ]
        ]
    },
    {
        "id": "abc9c1df.425bf",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot delete data\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1740,
        "wires": [
            [
                "168fb1b9.154b7e"
            ]
        ]
    },
    {
        "id": "6153f8ac.abbf68",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Delete Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1700,
        "wires": []
    },
    {
        "id": "168fb1b9.154b7e",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Delete Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 1740,
        "wires": []
    },
    {
        "id": "f1641f0d.7f77c",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HDEL params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient.name', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1760,
        "wires": [
            [
                "262c1cc.0fd69e4"
            ]
        ]
    },
    {
        "id": "262c1cc.0fd69e4",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hdel",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "5ac45f54.2b2bc",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1400,
        "wires": [
            [
                "3c3e6ac9.f571b6"
            ]
        ]
    },
    {
        "id": "3c3e6ac9.f571b6",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1400,
        "wires": [
            [
                "a811919e.2f1d5"
            ]
        ]
    },
    {
        "id": "a811919e.2f1d5",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HGET params",
        "func": "payload = msg.payload\nmsg.payload = ['patient', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1400,
        "wires": [
            [
                "aeb6d675.841758"
            ]
        ]
    },
    {
        "id": "aeb6d675.841758",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hget",
        "name": "",
        "topic": "",
        "x": 950,
        "y": 1400,
        "wires": [
            [
                "714a0e.ababe5f4"
            ]
        ]
    },
    {
        "id": "714a0e.ababe5f4",
        "type": "switch",
        "z": "c690d9f4.501db8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 1400,
        "wires": [
            [
                "2fe84d03.2f23e2"
            ],
            [
                "4b0f635a.c6eddc"
            ]
        ]
    },
    {
        "id": "2fe84d03.2f23e2",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"data doesn't exists\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 1373,
        "wires": [
            [
                "c9efa3cd.23766"
            ]
        ]
    },
    {
        "id": "c9efa3cd.23766",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "GET Data Error",
        "statusCode": "400",
        "headers": {},
        "x": 1700,
        "y": 1373,
        "wires": []
    },
    {
        "id": "4b0f635a.c6eddc",
        "type": "json",
        "z": "c690d9f4.501db8",
        "name": "Database JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1380,
        "y": 1420,
        "wires": [
            [
                "12341d22.970583"
            ]
        ]
    },
    {
        "id": "12341d22.970583",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "GET Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1420,
        "wires": []
    },
    {
        "id": "9199cb91.b39918",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Create Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 40,
        "wires": [
            [
                "a5bb07.0fb2c4f8"
            ]
        ]
    },
    {
        "id": "a5bb07.0fb2c4f8",
        "type": "function",
        "z": "41fae537.ef571c",
        "name": "Generate Data for Create",
        "func": "datatypes = [\n    \"allergies\", \n    \"medications\", \n    \"problems\",\n    \"vitalsigns\"\n];\n\ntype = Math.floor(Math.random() * 4);\n//type=3;\ntimestamp = msg.payload;\n\nmsg.payload = {\n    ptId: 9999999001,\n    datatype: datatypes[type]\n}\n\nswitch(type) {\n    case 0:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            cause: \"cats\",\n            causeCode: \"cats\",\n            causeTerminology: \"cats\",\n            dateCreated: timestamp,\n            reaction: \"cats\",\n            originalComposition: \"\",\n            originalSource: \"\",\n            terminologyCode: \"\",\n        };\n        break;\n    case 1:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            dateCreated: timestamp,\n            doseAmount: \"20 mg\",\n            doseDirections: \"20 mg\",\n            doseTiming: \"1 per day\",\n            medicationCode: \"test\",\n            name: \"Paracetomol\",\n            route: \"Po Per Oral\",\n            startDate: \"2019-06-12\",\n            startTime: \"2019-06-15\",\n        }\n        break;\n    case 2:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            code: \"test\",\n            dateCreated: timestamp,\n            dateOfOnset: \"2019-06-11\",\n            description: \"test\",\n            problem: \"Asthma\",\n            terminology: \"test\",\n            originalComposition: \"\",\n            originalSource: \"\",\n        }\n        break;\n    case 3:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            dateCreate: 1560429237,\n            diastolicBP: \"98\",\n            heartRate: \"98\",\n            levelOfConsciousness: \"Voice\",\n            newsScore: \"11\",\n            oxygenSaturation: \"95\",\n            oxygenSupplemental: true,\n            respirationRate: \"13\",\n            systolicBP: \"98\",\n            temperature: \"37\",\n        }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 40,
        "wires": [
            [
                "5cadd99c.e57a18"
            ]
        ]
    },
    {
        "id": "92293806.97d6d8",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "Create Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 40,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "5cadd99c.e57a18",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Create API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://127.0.0.1:1880/patient/'&msg.payload.ptId&'/'&msg.payload.datatype",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 40,
        "wires": [
            [
                "2828ddce.308d22"
            ]
        ]
    },
    {
        "id": "2828ddce.308d22",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Method is POST",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 40,
        "wires": [
            [
                "92293806.97d6d8"
            ]
        ]
    },
    {
        "id": "eb05eb3f.16a458",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Allergies Synopsis Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 180,
        "wires": [
            [
                "bd6f392.eb729c8"
            ]
        ]
    },
    {
        "id": "bd6f392.eb729c8",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "GET Allergies Synopsis",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/synopsis/allergies",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 180,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "f9557633.12e868",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Allergy Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 360,
        "wires": [
            [
                "4d9e3a1a.0562c4"
            ]
        ]
    },
    {
        "id": "49ac1f77.161b3",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "GET Medicians Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/medications/0ndpc1dvqagapo0oui3num",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 400,
        "y": 400,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "89b8571.bccd2a8",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Medications Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 400,
        "wires": [
            [
                "49ac1f77.161b3"
            ]
        ]
    },
    {
        "id": "4d9e3a1a.0562c4",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "GET Allergies Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/allergies/kq21alape7mtw7eupmrzua?transform=TransformB-Allergy-UI2FHIR",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 390,
        "y": 360,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "71c7d06a.12d35",
        "type": "json",
        "z": "41fae537.ef571c",
        "name": "Response Data JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "9aa2934e.5c2b8"
            ]
        ]
    },
    {
        "id": "9aa2934e.5c2b8",
        "type": "debug",
        "z": "41fae537.ef571c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1610,
        "y": 240,
        "wires": []
    },
    {
        "id": "c1a72255.c282a",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "Update Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 80,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "85afa1bd.ceca8",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Method is PUT",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 80,
        "wires": [
            [
                "c1a72255.c282a"
            ]
        ]
    },
    {
        "id": "fd618f72.d4fbe",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Update API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://127.0.0.1:1880/patient/'&msg.payload.ptId&'/'&msg.payload.datatype&'/'&msg.payload.data.sourceId",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 80,
        "wires": [
            [
                "85afa1bd.ceca8"
            ]
        ]
    },
    {
        "id": "eab55525.0bda08",
        "type": "function",
        "z": "41fae537.ef571c",
        "name": "Generate Data for Update",
        "func": "msg.payload = {\n    ptId: 9999999001,\n    datatype: 'allergies',\n    data: {\n        author: \"Not known\",\n        cause: \"Adverse reaction to aspirin\",\n        causeCode: \"http://snomed.info/sct\",\n        causeTerminology: 292044008,\n        dateCreated: 1181170800000,\n        id: \"kq21alape7mtw7eupmrzua\",\n        originalComposition: \"\",\n        originalSource: \"\",\n        reaction: \"Adverse reaction to aspirin\",\n        source: \"ethercis\",\n        sourceId: \"kq21alape7mtw7eupmrzua\",\n        terminologyCode: \"http://snomed.info/sct\"\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 80,
        "wires": [
            [
                "fd618f72.d4fbe"
            ]
        ]
    },
    {
        "id": "dccff396.59743",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Update Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "eab55525.0bda08"
            ]
        ]
    },
    {
        "id": "17090843.d062e8",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Delete Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 120,
        "wires": [
            [
                "e78a589.f0b9ca8"
            ]
        ]
    },
    {
        "id": "e806a447.986e38",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "Delete Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 120,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "b116669c.8253d8",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Method is DELETE",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "DELETE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 120,
        "wires": [
            [
                "e806a447.986e38"
            ]
        ]
    },
    {
        "id": "456b5411.720dfc",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Delete API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://127.0.0.1:1880/patient/'&msg.payload.ptId&'/'&msg.payload.datatype&'/'&msg.payload.sourceId",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 120,
        "wires": [
            [
                "b116669c.8253d8"
            ]
        ]
    },
    {
        "id": "e78a589.f0b9ca8",
        "type": "function",
        "z": "41fae537.ef571c",
        "name": "Generate Data for Delete",
        "func": "msg.payload = {\n    ptId: 9999999001,\n    datatype: 'allergies',\n    sourceId: \"uige9bzetlkce76w5x9hti\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "456b5411.720dfc"
            ]
        ]
    },
    {
        "id": "9624e1ba.d8467",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "GET Medication Synopsis",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/synopsis/medications",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 220,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "f74636de.3d3788",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Medications Synopsis Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "9624e1ba.d8467"
            ]
        ]
    },
    {
        "id": "404d5043.1f22",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "GET Problems Synopsis",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/synopsis/problems",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 260,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "adc25c35.e5001",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Problems Synopsis Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 260,
        "wires": [
            [
                "404d5043.1f22"
            ]
        ]
    },
    {
        "id": "4831014c.34c6a",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Problems Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 440,
        "wires": [
            [
                "e34db00d.99f18"
            ]
        ]
    },
    {
        "id": "e34db00d.99f18",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "GET Problems Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/problems/kb6q8h0zucjx8nuov7h8",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "fbd9c6a1.4e6af8",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Patient Create Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 560,
        "wires": [
            [
                "fd8309ca.316318"
            ]
        ]
    },
    {
        "id": "fd8309ca.316318",
        "type": "function",
        "z": "41fae537.ef571c",
        "name": "Generate Data for Patient",
        "func": "\nmsg.payload = {\n    data: {\n        address: {\n            city: \"Redhill\",\n            country: \"United Kingdom\",\n            district: \"Surrey\",\n            line: \"3 Cooper Walk\",\n            postalCode: \"RH1 6SF\",\n        },\n        birthDate: \"1956-11-10\",\n        gender: \"male\",\n        id: global.get('patientID'),\n        name: {\n            family: \"Tweed\",\n            given: [\n                \"Rob\",\n            ],\n            prefix: \"Mr\",\n            telecom: \"+779017 876\"\n        },\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 560,
        "wires": [
            [
                "339ea26c.553d7e"
            ]
        ]
    },
    {
        "id": "339ea26c.553d7e",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Create API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://127.0.0.1:1880/mpi/patient/'&msg.payload.data.id",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 560,
        "wires": [
            [
                "4d92ed07.d0b054"
            ]
        ]
    },
    {
        "id": "4d92ed07.d0b054",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Method is POST",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 560,
        "wires": [
            [
                "70f23c1e.8ba684"
            ]
        ]
    },
    {
        "id": "70f23c1e.8ba684",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "Create Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 1060,
        "y": 560,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "1095885c.d9fa48",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Patient Update Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 620,
        "wires": [
            [
                "27bae290.93130e"
            ]
        ]
    },
    {
        "id": "27bae290.93130e",
        "type": "function",
        "z": "41fae537.ef571c",
        "name": "Generate Data for Patient",
        "func": "\nmsg.payload = {\n    data: {\n        address: {\n            city: \"Redhill\",\n            country: \"United Kingdom\",\n            district: \"Surrey\",\n            line: \"3 Cooper Walk\",\n            postalCode: \"RH1 6SF\"\n        },\n        birthDate: \"1956-11-10\",\n        gender: \"female\",\n        id: \"9999999801\",\n        name: {\n            family: \"Tweed\",\n            given: [\n                \"Rob\"\n            ],\n            prefix: \"Mr\",\n            telecom: \"+779017 876\"\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 620,
        "wires": [
            [
                "73905e8a.0acf2"
            ]
        ]
    },
    {
        "id": "73905e8a.0acf2",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Update API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://159.65.91.78:1880/mpi/patient/'&msg.payload.data.id",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 620,
        "wires": [
            [
                "c8e11739.ce2148"
            ]
        ]
    },
    {
        "id": "c8e11739.ce2148",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Method is PUT",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 620,
        "wires": [
            [
                "e46716be.479de8"
            ]
        ]
    },
    {
        "id": "e46716be.479de8",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "Update Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 1060,
        "y": 620,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "d5d209f2.d26a08",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Patient Delete Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 680,
        "wires": [
            [
                "54f072cb.35fa5c"
            ]
        ]
    },
    {
        "id": "54f072cb.35fa5c",
        "type": "function",
        "z": "41fae537.ef571c",
        "name": "Generate Data for Delete",
        "func": "msg.payload = {\n    ptId: 9999999801,\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "31b64607.2c41ea"
            ]
        ]
    },
    {
        "id": "4095f184.2efe8",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Method is DELETE",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "DELETE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 680,
        "wires": [
            [
                "720d52cd.5fa9ec"
            ]
        ]
    },
    {
        "id": "720d52cd.5fa9ec",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "Delete Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 680,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "31b64607.2c41ea",
        "type": "change",
        "z": "41fae537.ef571c",
        "name": "Delete API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://127.0.0.1:1880/mpi/patient/'&msg.payload.ptId",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 680,
        "wires": [
            [
                "4095f184.2efe8"
            ]
        ]
    },
    {
        "id": "1e7d5cbc.6e55e3",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Patient Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 480,
        "wires": [
            [
                "6e68e483.d96acc"
            ]
        ]
    },
    {
        "id": "6e68e483.d96acc",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "GET Patients Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/mpi/patient/9999999800",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 390,
        "y": 480,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "a4140bb0.b7b198",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Set Patient ID",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 760,
        "wires": [
            [
                "527d3d7a.b1da44"
            ]
        ]
    },
    {
        "id": "527d3d7a.b1da44",
        "type": "function",
        "z": "41fae537.ef571c",
        "name": "Set Patient ID",
        "func": "global.set('patientID', 9999999799);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "84e2edeb.1584d",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "VitalSigns Synopsis Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "6b78370c.554ee8"
            ]
        ]
    },
    {
        "id": "6b78370c.554ee8",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "GET VitalSigns Synopsis",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/synopsis/vitalsigns",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 300,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "38a2faba.03dd16",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/synopsis/vitalsigns",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1100,
        "wires": [
            [
                "b93efe00.f6218"
            ]
        ]
    },
    {
        "id": "b93efe00.f6218",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1100,
        "wires": [
            [
                "9396993f.224268",
                "c8d0be35.61b53",
                "d175b464.e533a8"
            ]
        ]
    },
    {
        "id": "9d95e5a7.22d618",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Vitalsigns Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 520,
        "wires": [
            [
                "a0ff179c.5d7e38"
            ]
        ]
    },
    {
        "id": "a0ff179c.5d7e38",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "GET Problems Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/vitalsigns/s853d3jdfddvf89xni0cf",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 400,
        "y": 520,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "c83c7612.9a1808",
        "type": "http in",
        "z": "c690d9f4.501db8",
        "name": "",
        "url": "/patient/:ptId/vitalsigns",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1940,
        "wires": [
            [
                "aa61716b.79bc4"
            ]
        ]
    },
    {
        "id": "aa61716b.79bc4",
        "type": "change",
        "z": "c690d9f4.501db8",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1940,
        "wires": [
            [
                "ad4a639e.81616"
            ]
        ]
    },
    {
        "id": "ad4a639e.81616",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Redis HGET params",
        "func": "payload = msg.payload\nmsg.payload = [payload.ptId+'.'+payload.datatype];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 1940,
        "wires": [
            [
                "7d0094f4.da0adc"
            ]
        ]
    },
    {
        "id": "7d0094f4.da0adc",
        "type": "redis-command",
        "z": "c690d9f4.501db8",
        "server": "89248eb9.e979f",
        "command": "hgetall",
        "name": "",
        "topic": "",
        "x": 850,
        "y": 1940,
        "wires": [
            [
                "17874990.842666"
            ]
        ]
    },
    {
        "id": "17874990.842666",
        "type": "switch",
        "z": "c690d9f4.501db8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 1940,
        "wires": [
            [
                "e78a9d1a.335fa"
            ],
            [
                "6e1d9e0f.96316"
            ]
        ]
    },
    {
        "id": "e78a9d1a.335fa",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"data doesn't exists\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1210,
        "y": 1880,
        "wires": [
            [
                "de57765c.d75e68"
            ]
        ]
    },
    {
        "id": "de57765c.d75e68",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "GET Data Error",
        "statusCode": "400",
        "headers": {},
        "x": 1400,
        "y": 1880,
        "wires": []
    },
    {
        "id": "179a040.42a00fc",
        "type": "inject",
        "z": "41fae537.ef571c",
        "name": "Vitalsigns List Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 840,
        "wires": [
            [
                "c5a2a284.90121"
            ]
        ]
    },
    {
        "id": "c5a2a284.90121",
        "type": "http request",
        "z": "41fae537.ef571c",
        "name": "GET Vitalsigns List",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://127.0.0.1:1880/patient/9999999001/vitalsigns",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 390,
        "y": 840,
        "wires": [
            [
                "71c7d06a.12d35"
            ]
        ]
    },
    {
        "id": "6e1d9e0f.96316",
        "type": "function",
        "z": "c690d9f4.501db8",
        "name": "Generate VitalSigns List",
        "func": "payload = msg.payload;\n\nmsg.payload = [];\n\nObject.values(payload).forEach(value => {\n  msg.payload.push(JSON.parse(value));\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 1960,
        "wires": [
            [
                "4a1319c6.9e4408"
            ]
        ]
    },
    {
        "id": "4a1319c6.9e4408",
        "type": "http response",
        "z": "c690d9f4.501db8",
        "name": "Synopsis List Success",
        "statusCode": "",
        "headers": {},
        "x": 1560,
        "y": 1960,
        "wires": []
    }
]
