[
    {
        "id": "a445d380.3903c",
        "type": "tab",
        "label": "JSON-REDIS-TEST",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1d7783c5.5e966c",
        "type": "tab",
        "label": "JSON-REDIS-SECOND",
        "disabled": false,
        "info": "A simple API implementation for JSON data transformation.\nJSON data is stored in Redis Database."
    },
    {
        "id": "96c915d5.772fa8",
        "type": "redis-config",
        "z": "",
        "host": "{{REDIS_PORT_6379_TCP_ADDR}}",
        "port": "{{REDIS_PORT_6379_TCP_PORT}}",
        "dbase": "{{REDIS_DB}}",
        "pass": "X6NvLgr5NJ/INEuzt6mxP5QdTyK+2ZQiXwwtaj8Mipy97SRM1pj6dK734XmoFZrNg5+b8kpO54cIPTVkdeveloper@ubuntu"
    },
    {
        "id": "cff82870.422c38",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/allergies/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "bf5379cd.057e08"
            ]
        ]
    },
    {
        "id": "bf5379cd.057e08",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 260,
        "wires": [
            [
                "78bdf0c8.9457b",
                "545d45cc.f9381c"
            ]
        ]
    },
    {
        "id": "a3e80da6.e2e0b",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hget",
        "name": "",
        "topic": "",
        "x": 890,
        "y": 240,
        "wires": [
            [
                "e901d2f3.e0152"
            ]
        ]
    },
    {
        "id": "78bdf0c8.9457b",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HGET params",
        "func": "payload = msg.payload\nmsg.payload = [payload.ptId+'.'+payload.datatype, payload.sourceId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 240,
        "wires": [
            [
                "a3e80da6.e2e0b"
            ]
        ]
    },
    {
        "id": "ace6b6ef.b965a8",
        "type": "json",
        "z": "1d7783c5.5e966c",
        "name": "Database JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 900,
        "y": 300,
        "wires": [
            [
                "cac16d9e.9f839"
            ]
        ]
    },
    {
        "id": "e3d2de6f.3011b",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "GET Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 360,
        "wires": []
    },
    {
        "id": "51a9083d.e8e528",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Create Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 80,
        "wires": []
    },
    {
        "id": "545d45cc.f9381c",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Transform method",
        "func": "msg.payload = {transform: msg.payload.transform ? msg.payload.transform : ''};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 360,
        "wires": [
            [
                "cac16d9e.9f839"
            ]
        ]
    },
    {
        "id": "cac16d9e.9f839",
        "type": "join",
        "z": "1d7783c5.5e966c",
        "name": "Add transform method",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 920,
        "y": 360,
        "wires": [
            [
                "1f592904.6b4327"
            ]
        ]
    },
    {
        "id": "1f592904.6b4327",
        "type": "switch",
        "z": "1d7783c5.5e966c",
        "name": "Transform Switch",
        "property": "payload.transform",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "TransformA-Allergy-UI2openEHR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TransformB-Allergy-UI2FHIR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1150,
        "y": 360,
        "wires": [
            [
                "fc06f253.41b11"
            ],
            [
                "be3bd6bb.0abd18"
            ],
            [
                "a0347aee.1efff8"
            ]
        ]
    },
    {
        "id": "fc06f253.41b11",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "TransformA-Allergy-UI2openEHR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"allergies_and_adverse_reactions\": {\t      \"adverse_reaction_risk\": {\t        \"causative_agent\": {\t          \"value\": msg.payload.cause,\t          \"code\": msg.payload.causeCode,\t          \"terminology\": msg.payload.causeTerminology\t        },\t        \"reaction_details\": {\t          \"manifestation\": {\t            \"code\": msg.payload.terminologyCode,\t            \"value\": msg.payload.reaction\t          }\t        }\t      }\t    },\t    \"composer\": {\t      \"value\": msg.payload.author\t    },\t    \"start_time\": $fromMillis(msg.payload.dateCreated),\t    \"host\": msg.payload.source,\t    \"uid\": msg.payload.sourceId,\t    \"patientId\": msg.payload.patientId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 320,
        "wires": [
            [
                "e3d2de6f.3011b"
            ]
        ]
    },
    {
        "id": "be3bd6bb.0abd18",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "TransformB-Allergy-UI2FHIR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"resourceType\": \"AllergyIntolerance\",\t    \"identifier\": [\t      {\t        \"system\": msg.payload.source,\t        \"value\": msg.payload.sourceId\t      }\t    ],\t    \"onset\": $fromMillis(msg.payload.dateCreated),\t    \"recordedDate\": $fromMillis(msg.payload.dateCreated),\t    \"recorder\": {\t      \"reference\": \"GMC Doctor\",\t      \"display\": msg.payload.author\t    },\t    \"patient\": {\t      \"reference\": \"=> fhirReference(patientId, 'Patient', false)\",\t      \"display\": \"{{patientName}}\"\t    },\t    \"substance\": {\t      \"coding\": [\t        {\t          \"system\": msg.payload.causeCode,\t          \"code\": msg.payload.causeTerminology,\t          \"display\": msg.payload.cause\t        }\t      ]\t    },\t    \"status\": \"active\",\t    \"type\": \"allergy\",\t    \"category\": \"other\",\t    \"reaction\": [\t      {\t        \"substance\": {\t          \"coding\": [\t            {\t              \"system\": msg.payload.causeCode,\t              \"code\": msg.payload.causeTerminology,\t              \"display\": msg.payload.cause\t            }\t          ],\t          \"text\": msg.payload.ause\t        },\t        \"certainty\": \"confirmed\",\t        \"manifestation\": [\t          {\t            \"coding\": [\t              {\t                \"system\": msg.payload.terminologyCode,\t                \"code\": \"TBC\",\t                \"display\": msg.payload.reaction\t              }\t            ],\t            \"text\": msg.payload.reaction\t          }\t        ],\t        \"description\": msg.payload.reaction\t      }\t    ],\t    \"note\": msg.payload.reaction\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 360,
        "wires": [
            [
                "e3d2de6f.3011b"
            ]
        ]
    },
    {
        "id": "e51da94e.5c3b78",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/problems/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "4a44a023.7ba05"
            ]
        ]
    },
    {
        "id": "4a44a023.7ba05",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "78bdf0c8.9457b",
                "545d45cc.f9381c"
            ]
        ]
    },
    {
        "id": "e63ae092.e141a",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/medications/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "30d16b3a.2e29a4"
            ]
        ]
    },
    {
        "id": "30d16b3a.2e29a4",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 300,
        "wires": [
            [
                "78bdf0c8.9457b",
                "545d45cc.f9381c"
            ]
        ]
    },
    {
        "id": "a0347aee.1efff8",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "No Transform",
        "func": "msg.payload = msg.payload;\ndelete msg.payload.transform;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1380,
        "y": 400,
        "wires": [
            [
                "e3d2de6f.3011b"
            ]
        ]
    },
    {
        "id": "e901d2f3.e0152",
        "type": "switch",
        "z": "1d7783c5.5e966c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 240,
        "wires": [
            [
                "4f3665ca.1e739c"
            ],
            [
                "ace6b6ef.b965a8"
            ]
        ]
    },
    {
        "id": "4645c81f.9a4378",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "GET Data Error",
        "statusCode": "400",
        "headers": {},
        "x": 1700,
        "y": 233,
        "wires": []
    },
    {
        "id": "72b68938.339f78",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/allergies",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "5e5a1936.d50b98"
            ]
        ]
    },
    {
        "id": "5e5a1936.d50b98",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 40,
        "wires": [
            [
                "a8010b34.53a228"
            ]
        ]
    },
    {
        "id": "68e04488.b0a58c",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 80,
        "wires": [
            [
                "a8010b34.53a228"
            ]
        ]
    },
    {
        "id": "3ddec017.8b2f1",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/medications",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "68e04488.b0a58c"
            ]
        ]
    },
    {
        "id": "8efd31b7.f8424",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 121,
        "wires": [
            [
                "a8010b34.53a228"
            ]
        ]
    },
    {
        "id": "6e2053ba.99d6fc",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/problems",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 121,
        "wires": [
            [
                "8efd31b7.f8424"
            ]
        ]
    },
    {
        "id": "a8010b34.53a228",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Add Source ID to Data",
        "func": "newid = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\nmsg.payload.data.id = newid;\nmsg.payload.data.sourceId = newid;\nmsg.payload.data.source = \"ethercis\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 80,
        "wires": [
            [
                "131fd02a.62991"
            ]
        ]
    },
    {
        "id": "131fd02a.62991",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype, payload.data.sourceId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 920,
        "y": 80,
        "wires": [
            [
                "26ad953c.3f79ba"
            ]
        ]
    },
    {
        "id": "26ad953c.3f79ba",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1130,
        "y": 80,
        "wires": [
            [
                "3b99d21d.1b81de"
            ]
        ]
    },
    {
        "id": "3b99d21d.1b81de",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data created successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 80,
        "wires": [
            [
                "51a9083d.e8e528"
            ]
        ]
    },
    {
        "id": "9fe7de90.0663f",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/allergies/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "b328abcf.0ffc88"
            ]
        ]
    },
    {
        "id": "a8e1ab74.493c68",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/medications/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "127b3c49.765ea4"
            ]
        ]
    },
    {
        "id": "700d648e.a6084c",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/problems/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 601,
        "wires": [
            [
                "46322f3e.76e72"
            ]
        ]
    },
    {
        "id": "46322f3e.76e72",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "d0c7dbfa.d75698",
                "e96530f8.5e447"
            ]
        ]
    },
    {
        "id": "127b3c49.765ea4",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 560,
        "wires": [
            [
                "d0c7dbfa.d75698",
                "e96530f8.5e447"
            ]
        ]
    },
    {
        "id": "b328abcf.0ffc88",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 520,
        "wires": [
            [
                "d0c7dbfa.d75698",
                "e96530f8.5e447"
            ]
        ]
    },
    {
        "id": "a39837af.76fce8",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype, payload.sourceId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 600,
        "wires": [
            [
                "87e79441.d20978"
            ]
        ]
    },
    {
        "id": "87e79441.d20978",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1150,
        "y": 600,
        "wires": [
            [
                "b6c9410e.44a0e"
            ]
        ]
    },
    {
        "id": "b6c9410e.44a0e",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data updated successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 600,
        "wires": [
            [
                "d4517d0d.51b0c"
            ]
        ]
    },
    {
        "id": "d4517d0d.51b0c",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Update Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 600,
        "wires": []
    },
    {
        "id": "f47fbf3d.7e4b6",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/allergies/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 740,
        "wires": [
            [
                "29c5ba43.b03856"
            ]
        ]
    },
    {
        "id": "1894e13a.1d1b2f",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/medications/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 780,
        "wires": [
            [
                "852a07fb.15a828"
            ]
        ]
    },
    {
        "id": "f5e41432.289468",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/problems/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 821,
        "wires": [
            [
                "8d8346c2.5a0748"
            ]
        ]
    },
    {
        "id": "8d8346c2.5a0748",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 820,
        "wires": [
            [
                "5829bbea.347694"
            ]
        ]
    },
    {
        "id": "852a07fb.15a828",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 780,
        "wires": [
            [
                "5829bbea.347694"
            ]
        ]
    },
    {
        "id": "29c5ba43.b03856",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 740,
        "wires": [
            [
                "5829bbea.347694"
            ]
        ]
    },
    {
        "id": "5829bbea.347694",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HDEL params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype, payload.sourceId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 780,
        "wires": [
            [
                "92a473c6.fdf0a"
            ]
        ]
    },
    {
        "id": "92a473c6.fdf0a",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hdel",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 780,
        "wires": [
            [
                "b61d41f2.246f6"
            ]
        ]
    },
    {
        "id": "3256b818.40d938",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data deleted successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 760,
        "wires": [
            [
                "997ece3f.3e329"
            ]
        ]
    },
    {
        "id": "997ece3f.3e329",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Delete Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 760,
        "wires": []
    },
    {
        "id": "b61d41f2.246f6",
        "type": "switch",
        "z": "1d7783c5.5e966c",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 780,
        "wires": [
            [
                "3256b818.40d938"
            ],
            [
                "e95934af.b85f18"
            ]
        ]
    },
    {
        "id": "e95934af.b85f18",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot delete data\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 800,
        "wires": [
            [
                "41987a33.d6a4e4"
            ]
        ]
    },
    {
        "id": "41987a33.d6a4e4",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Delete Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 800,
        "wires": []
    },
    {
        "id": "4e21e8ee.cb76b8",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/synopsis/allergies/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "8e2c086d.a0e3d8"
            ]
        ]
    },
    {
        "id": "8e2c086d.a0e3d8",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"allergies\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 980,
        "wires": [
            [
                "6c1e0b4b.c81a74",
                "f2ea8458.b84c28",
                "c81747c9.a5ab18"
            ]
        ]
    },
    {
        "id": "990e394.31357c8",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/synopsis/problems",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "8b949818.c4cbd8"
            ]
        ]
    },
    {
        "id": "8b949818.c4cbd8",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"problems\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1060,
        "wires": [
            [
                "6c1e0b4b.c81a74",
                "f2ea8458.b84c28",
                "c81747c9.a5ab18"
            ]
        ]
    },
    {
        "id": "a38b9043.7bca4",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/synopsis/medications",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "ff3eebae.44b0b8"
            ]
        ]
    },
    {
        "id": "ff3eebae.44b0b8",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"medications\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "6c1e0b4b.c81a74",
                "f2ea8458.b84c28",
                "c81747c9.a5ab18"
            ]
        ]
    },
    {
        "id": "6c1e0b4b.c81a74",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HKEYS params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 980,
        "wires": [
            [
                "31584d36.fa1412"
            ]
        ]
    },
    {
        "id": "31584d36.fa1412",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hkeys",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 980,
        "wires": [
            [
                "f5114c80.11398"
            ]
        ]
    },
    {
        "id": "f2ea8458.b84c28",
        "type": "join",
        "z": "1d7783c5.5e966c",
        "name": "JOIN Keys Data",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 760,
        "y": 1060,
        "wires": [
            [
                "b89f99cb.04d858"
            ]
        ]
    },
    {
        "id": "15b1a0d4.9f014f",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "Keys JSON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"keys\":msg.payload\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1000,
        "wires": [
            [
                "f2ea8458.b84c28"
            ]
        ]
    },
    {
        "id": "b89f99cb.04d858",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HMGET params",
        "func": "payload = msg.payload;\nmsg.payload = [payload.ptId + '.' + payload.datatype];\nfor (i = 0; i < 4 ; i++) {\n    if (payload.keys[i]) {\n        msg.payload.push(payload.keys[i]);\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1060,
        "wires": [
            [
                "a2427fd.8d2f68"
            ]
        ]
    },
    {
        "id": "a2427fd.8d2f68",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hmget",
        "name": "",
        "topic": "",
        "x": 1230,
        "y": 1060,
        "wires": [
            [
                "57f28f87.cc9fe"
            ]
        ]
    },
    {
        "id": "57f28f87.cc9fe",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Synopsis JSON String",
        "func": "payload = msg.payload;\nmsg.payload = \"[\";\nfor (i = 0; i < payload.length; i++) {\n    msg.payload += payload[i] + \",\";\n}\nmsg.payload = msg.payload.substring(0, msg.payload.length - 1) + \"]\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 1114,
        "wires": [
            [
                "bb2c08ab.511d78"
            ]
        ]
    },
    {
        "id": "bb2c08ab.511d78",
        "type": "json",
        "z": "1d7783c5.5e966c",
        "name": "Synopsis JSON Object",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1200,
        "y": 1114,
        "wires": [
            [
                "ed8a35f0.b42138"
            ]
        ]
    },
    {
        "id": "ed8a35f0.b42138",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Make Synopsis Object",
        "func": "payload = msg.payload;\nmsg.payload = {\n    \"synopsis\": payload,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 1114,
        "wires": [
            [
                "c81747c9.a5ab18"
            ]
        ]
    },
    {
        "id": "c81747c9.a5ab18",
        "type": "join",
        "z": "1d7783c5.5e966c",
        "name": "JOIN Synopsis Data",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 780,
        "y": 1179,
        "wires": [
            [
                "a1299ee2.b39c9"
            ]
        ]
    },
    {
        "id": "a1299ee2.b39c9",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Format Synopsis Data",
        "func": "payload = msg.payload;\n\nmsg.payload = {\n    \"heading\": payload.datatype,\n    \"synopsis\": [],\n    \"token\": \"input token\"\n}\n\nfor (i = 0; i < payload.synopsis.length; i++) {\n    synopsis = {\n        \"dateCreated\": payload.synopsis[i].dateCreated,\n        \"source\": payload.synopsis[i].source,\n        \"sourceId\": payload.synopsis[i].sourceId,\n        \"text\": \"\"\n    };\n    switch(payload.datatype) {\n        case 'allergies':\n            synopsis.text = payload.synopsis[i].reaction;\n            break;\n        case 'medications':\n            synopsis.text = payload.synopsis[i].name;\n            break;\n        case 'problems':\n            synopsis.text = payload.synopsis[i].problem;\n            break;\n    }\n    msg.payload.synopsis.push(synopsis);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 1179,
        "wires": [
            [
                "b5255762.4c4618"
            ]
        ]
    },
    {
        "id": "b5255762.4c4618",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Synopsis Success",
        "statusCode": "",
        "headers": {},
        "x": 1710,
        "y": 1173,
        "wires": []
    },
    {
        "id": "f5114c80.11398",
        "type": "switch",
        "z": "1d7783c5.5e966c",
        "name": "Check the Result",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 980,
        "wires": [
            [
                "5fc3e581.04563c"
            ],
            [
                "15b1a0d4.9f014f"
            ]
        ]
    },
    {
        "id": "5fc3e581.04563c",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"no data available\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 960,
        "wires": [
            [
                "f0cd3b32.1b2898"
            ]
        ]
    },
    {
        "id": "f0cd3b32.1b2898",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Synopsis Error",
        "statusCode": "400",
        "headers": {},
        "x": 1700,
        "y": 960,
        "wires": []
    },
    {
        "id": "d0c7dbfa.d75698",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HEXISTS params",
        "func": "payload = msg.payload\nmsg.payload = [payload.ptId+'.'+payload.datatype, payload.sourceId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 520,
        "wires": [
            [
                "18719d3.70adc63"
            ]
        ]
    },
    {
        "id": "18719d3.70adc63",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hexists",
        "name": "",
        "topic": "",
        "x": 930,
        "y": 520,
        "wires": [
            [
                "a5d89c1b.efd12"
            ]
        ]
    },
    {
        "id": "a5d89c1b.efd12",
        "type": "switch",
        "z": "1d7783c5.5e966c",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 520,
        "wires": [
            [
                "ac5191ff.70d3c"
            ],
            [
                "9dd0362b.92c898"
            ]
        ]
    },
    {
        "id": "ac5191ff.70d3c",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot find data to update\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 500,
        "wires": [
            [
                "44fdc72a.511578"
            ]
        ]
    },
    {
        "id": "44fdc72a.511578",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Update Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 500,
        "wires": []
    },
    {
        "id": "9dd0362b.92c898",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Success JSON",
        "func": "msg.payload = {\n    result: \"exist\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 540,
        "wires": [
            [
                "e96530f8.5e447"
            ]
        ]
    },
    {
        "id": "e96530f8.5e447",
        "type": "join",
        "z": "1d7783c5.5e966c",
        "name": "Join Success Result",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "5",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 600,
        "wires": [
            [
                "a39837af.76fce8"
            ]
        ]
    },
    {
        "id": "4f3665ca.1e739c",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"data doesn't exists\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 233,
        "wires": [
            [
                "4645c81f.9a4378"
            ]
        ]
    },
    {
        "id": "9cf9f1b7.1a881",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/vitalsigns",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 162,
        "wires": [
            [
                "ef55ca86.180498"
            ]
        ]
    },
    {
        "id": "ef55ca86.180498",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "a8010b34.53a228"
            ]
        ]
    },
    {
        "id": "b729d68c.2b7a98",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/vitalsigns/:sourceId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "697b8428.06a63c"
            ]
        ]
    },
    {
        "id": "697b8428.06a63c",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"transform\": msg.req.query.transform\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 380,
        "wires": [
            [
                "78bdf0c8.9457b",
                "545d45cc.f9381c"
            ]
        ]
    },
    {
        "id": "434d4cb6.af0194",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/vitalsigns/:sourceId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "9054b189.443e7"
            ]
        ]
    },
    {
        "id": "9054b189.443e7",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"sourceId\": msg.req.params.sourceId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 639,
        "wires": [
            [
                "d0c7dbfa.d75698",
                "e96530f8.5e447"
            ]
        ]
    },
    {
        "id": "d1c63668.15eff8",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/patient/:ptId/vitalsigns/:sourceId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 860,
        "wires": [
            [
                "c8d15568.38ce58"
            ]
        ]
    },
    {
        "id": "c8d15568.38ce58",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"datatype\": \"vitalsigns\",\t    \"sourceId\": msg.req.params.sourceId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 860,
        "wires": [
            [
                "5829bbea.347694"
            ]
        ]
    },
    {
        "id": "5f03a54f.6021ec",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "PostParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1300,
        "wires": [
            [
                "dc37f768.66cdf8",
                "5eebd5d4.7fd62c"
            ]
        ]
    },
    {
        "id": "9d0e539e.5774d",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1300,
        "wires": [
            [
                "5f03a54f.6021ec"
            ]
        ]
    },
    {
        "id": "dc37f768.66cdf8",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient', payload.ptId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1280,
        "wires": [
            [
                "e3910ea6.10648"
            ]
        ]
    },
    {
        "id": "5eebd5d4.7fd62c",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient.name', payload.ptId, payload.data.name.family];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1320,
        "wires": [
            [
                "103fec1d.ed5164"
            ]
        ]
    },
    {
        "id": "e3910ea6.10648",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 950,
        "y": 1280,
        "wires": [
            [
                "95db1049.eb209"
            ]
        ]
    },
    {
        "id": "95db1049.eb209",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"save_data\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1170,
        "y": 1280,
        "wires": [
            [
                "e99f8fab.ae462"
            ]
        ]
    },
    {
        "id": "8b9a3bfc.14a1e8",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Create Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1300,
        "wires": []
    },
    {
        "id": "103fec1d.ed5164",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 950,
        "y": 1320,
        "wires": [
            [
                "bc5d5f82.80545"
            ]
        ]
    },
    {
        "id": "bc5d5f82.80545",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"save_name\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1170,
        "y": 1320,
        "wires": [
            [
                "e99f8fab.ae462"
            ]
        ]
    },
    {
        "id": "e99f8fab.ae462",
        "type": "join",
        "z": "1d7783c5.5e966c",
        "name": "Join Results",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1450,
        "y": 1300,
        "wires": [
            [
                "8b9a3bfc.14a1e8"
            ]
        ]
    },
    {
        "id": "6ade406e.a89b7",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1540,
        "wires": [
            [
                "52a431ca.83c74"
            ]
        ]
    },
    {
        "id": "52a431ca.83c74",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "PutParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId,\t    \"data\": msg.req.body.data\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1540,
        "wires": [
            [
                "98d94141.ad805",
                "a82340c5.14876"
            ]
        ]
    },
    {
        "id": "98d94141.ad805",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HEXISTS params",
        "func": "payload = msg.payload\nmsg.payload = ['patient', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 1500,
        "wires": [
            [
                "bf6bfca1.7382c"
            ]
        ]
    },
    {
        "id": "a82340c5.14876",
        "type": "join",
        "z": "1d7783c5.5e966c",
        "name": "Join Success Result",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 700,
        "y": 1600,
        "wires": [
            [
                "d79ab481.ec4638",
                "e186de77.589c4"
            ]
        ]
    },
    {
        "id": "bf6bfca1.7382c",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hexists",
        "name": "",
        "topic": "",
        "x": 930,
        "y": 1500,
        "wires": [
            [
                "b7b19e9e.5f93a"
            ]
        ]
    },
    {
        "id": "b7b19e9e.5f93a",
        "type": "switch",
        "z": "1d7783c5.5e966c",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 1500,
        "wires": [
            [
                "2a935e.42c4bca2"
            ],
            [
                "60f8bedf.98ded"
            ]
        ]
    },
    {
        "id": "60f8bedf.98ded",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Success JSON",
        "func": "msg.payload = {\n    result: \"exist\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1340,
        "y": 1520,
        "wires": [
            [
                "a82340c5.14876"
            ]
        ]
    },
    {
        "id": "2a935e.42c4bca2",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot find data to update\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1480,
        "wires": [
            [
                "c605e94d.e9e358"
            ]
        ]
    },
    {
        "id": "c605e94d.e9e358",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Update Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 1480,
        "wires": []
    },
    {
        "id": "d79ab481.ec4638",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient', payload.ptId, JSON.stringify(payload.data)];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 1580,
        "wires": [
            [
                "ad75113d.afe5a"
            ]
        ]
    },
    {
        "id": "e186de77.589c4",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HSET params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient.name', payload.ptId, payload.data.name.family];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 1620,
        "wires": [
            [
                "d25d7bc8.afb698"
            ]
        ]
    },
    {
        "id": "d25d7bc8.afb698",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1150,
        "y": 1620,
        "wires": [
            [
                "570ea59e.aa65cc"
            ]
        ]
    },
    {
        "id": "ad75113d.afe5a",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hset",
        "name": "",
        "topic": "",
        "x": 1150,
        "y": 1580,
        "wires": [
            [
                "357b4295.70b46e"
            ]
        ]
    },
    {
        "id": "357b4295.70b46e",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"updated_data\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1580,
        "wires": [
            [
                "697ce616.a8e378"
            ]
        ]
    },
    {
        "id": "570ea59e.aa65cc",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {\n    \"update_name\": true,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1620,
        "wires": [
            [
                "697ce616.a8e378"
            ]
        ]
    },
    {
        "id": "697ce616.a8e378",
        "type": "join",
        "z": "1d7783c5.5e966c",
        "name": "Join Results",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1510,
        "y": 1600,
        "wires": [
            [
                "61f620bf.a702"
            ]
        ]
    },
    {
        "id": "61f620bf.a702",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Update Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1600,
        "wires": []
    },
    {
        "id": "83b66f7a.eff13",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HDEL params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1720,
        "wires": [
            [
                "67fecb9f.0910b4"
            ]
        ]
    },
    {
        "id": "73c5ae5a.730c1",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "DeleteParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1740,
        "wires": [
            [
                "83b66f7a.eff13",
                "1aa49634.6fdb8a"
            ]
        ]
    },
    {
        "id": "db03b657.051ae8",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1740,
        "wires": [
            [
                "73c5ae5a.730c1"
            ]
        ]
    },
    {
        "id": "67fecb9f.0910b4",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hdel",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 1720,
        "wires": [
            [
                "676fd9b7.be8458"
            ]
        ]
    },
    {
        "id": "676fd9b7.be8458",
        "type": "switch",
        "z": "1d7783c5.5e966c",
        "name": "Check the Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 1720,
        "wires": [
            [
                "49038a93.dc2e44"
            ],
            [
                "f2d717b9.83d058"
            ]
        ]
    },
    {
        "id": "49038a93.dc2e44",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"success\", msg: \"data deleted successfully\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1700,
        "wires": [
            [
                "87ded678.8c4e28"
            ]
        ]
    },
    {
        "id": "f2d717b9.83d058",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"cannot delete data\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 1740,
        "wires": [
            [
                "b36e3d8d.1c1f9"
            ]
        ]
    },
    {
        "id": "87ded678.8c4e28",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Delete Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1700,
        "wires": []
    },
    {
        "id": "b36e3d8d.1c1f9",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "Delete Error",
        "statusCode": "400",
        "headers": {},
        "x": 1690,
        "y": 1740,
        "wires": []
    },
    {
        "id": "1aa49634.6fdb8a",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HDEL params",
        "func": "payload = msg.payload;\nmsg.payload = ['patient.name', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1760,
        "wires": [
            [
                "90c8ae47.7040a"
            ]
        ]
    },
    {
        "id": "90c8ae47.7040a",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hdel",
        "name": "",
        "topic": "",
        "x": 910,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "25ab2a22.937306",
        "type": "http in",
        "z": "1d7783c5.5e966c",
        "name": "",
        "url": "/mpi/patient/:ptId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1400,
        "wires": [
            [
                "60f25b8.b937ba4"
            ]
        ]
    },
    {
        "id": "60f25b8.b937ba4",
        "type": "change",
        "z": "1d7783c5.5e966c",
        "name": "GetParams",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"ptId\": msg.req.params.ptId\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1400,
        "wires": [
            [
                "dd57c7fe.0a5ba8"
            ]
        ]
    },
    {
        "id": "dd57c7fe.0a5ba8",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Redis HGET params",
        "func": "payload = msg.payload\nmsg.payload = ['patient', payload.ptId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 1400,
        "wires": [
            [
                "113b9b5.9559065"
            ]
        ]
    },
    {
        "id": "113b9b5.9559065",
        "type": "redis-command",
        "z": "1d7783c5.5e966c",
        "server": "96c915d5.772fa8",
        "command": "hget",
        "name": "",
        "topic": "",
        "x": 950,
        "y": 1400,
        "wires": [
            [
                "fbeb924f.6318b"
            ]
        ]
    },
    {
        "id": "fbeb924f.6318b",
        "type": "switch",
        "z": "1d7783c5.5e966c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 1400,
        "wires": [
            [
                "8144bef7.f88bd"
            ],
            [
                "a5805f38.5e44e"
            ]
        ]
    },
    {
        "id": "8144bef7.f88bd",
        "type": "function",
        "z": "1d7783c5.5e966c",
        "name": "Result JSON",
        "func": "msg.payload = {data: \"fail\", msg: \"data doesn't exists\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 1373,
        "wires": [
            [
                "b8c51f85.1b577"
            ]
        ]
    },
    {
        "id": "b8c51f85.1b577",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "GET Data Error",
        "statusCode": "400",
        "headers": {},
        "x": 1700,
        "y": 1373,
        "wires": []
    },
    {
        "id": "a5805f38.5e44e",
        "type": "json",
        "z": "1d7783c5.5e966c",
        "name": "Database JSON",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1380,
        "y": 1420,
        "wires": [
            [
                "6062e4fa.eef2ac"
            ]
        ]
    },
    {
        "id": "6062e4fa.eef2ac",
        "type": "http response",
        "z": "1d7783c5.5e966c",
        "name": "GET Success",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 1420,
        "wires": []
    },
    {
        "id": "3368bba6.6765c4",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Create Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 40,
        "wires": [
            [
                "334dc1f7.62835e"
            ]
        ]
    },
    {
        "id": "334dc1f7.62835e",
        "type": "function",
        "z": "a445d380.3903c",
        "name": "Generate Data for Create",
        "func": "datatypes = [\n    \"allergies\", \n    \"medications\", \n    \"problems\",\n    \"vitalsigns\"\n];\n\ntype = Math.floor(Math.random() * 3);\ntimestamp = msg.payload;\n\nmsg.payload = {\n    ptId: 9999999001,\n    datatype: datatypes[type]\n}\n\nswitch(type) {\n    case 0:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            cause: \"cats\",\n            causeCode: \"cats\",\n            causeTerminology: \"cats\",\n            dateCreated: timestamp,\n            reaction: \"cats\",\n            originalComposition: \"\",\n            originalSource: \"\",\n            terminologyCode: \"\",\n        };\n        break;\n    case 1:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            dateCreated: timestamp,\n            doseAmount: \"20 mg\",\n            doseDirections: \"20 mg\",\n            doseTiming: \"1 per day\",\n            medicationCode: \"test\",\n            name: \"Paracetomol\",\n            route: \"Po Per Oral\",\n            startDate: \"2019-06-12\",\n            startTime: \"2019-06-15\",\n        }\n        break;\n    case 2:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            code: \"test\",\n            dateCreated: timestamp,\n            dateOfOnset: \"2019-06-11\",\n            description: \"test\",\n            problem: \"Asthma\",\n            terminology: \"test\",\n            originalComposition: \"\",\n            originalSource: \"\",\n        }\n        break;\n    case 3:\n        msg.payload.data = {\n            author: \"Robert Tweed\",\n            dateCreate: 1560429237,\n            diastolicBP: \"98\",\n            heartRate: \"98\",\n            levelOfConsciousness: \"Voice\",\n            newsScore: \"11\",\n            oxygenSaturation: \"95\",\n            oxygenSupplemental: true,\n            respirationRate: \"13\",\n            systolicBP: \"98\",\n            temperature: \"37\",\n        }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 40,
        "wires": [
            [
                "86ec6798.094fb8"
            ]
        ]
    },
    {
        "id": "7e699efd.1b5fc",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "Create Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 40,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "86ec6798.094fb8",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Create API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://172.17.0.2:1880/patient/'&msg.payload.ptId&'/'&msg.payload.datatype",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 40,
        "wires": [
            [
                "5b28b147.ff3fe"
            ]
        ]
    },
    {
        "id": "5b28b147.ff3fe",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Method is POST",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 40,
        "wires": [
            [
                "7e699efd.1b5fc"
            ]
        ]
    },
    {
        "id": "7f9a0d45.3dd0b4",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Allergies Synopsis Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 180,
        "wires": [
            [
                "ef63ff97.b33fa"
            ]
        ]
    },
    {
        "id": "ef63ff97.b33fa",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "GET Allergies Synopsis",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://172.17.0.2:1880/patient/9999999001/synopsis/allergies",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 410,
        "y": 180,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "f9cb84d2.6ab0f8",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Allergy Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 320,
        "wires": [
            [
                "13eb2bc7.c87fb4"
            ]
        ]
    },
    {
        "id": "778824c2.c921ac",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "GET Medicians Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://172.17.0.2:1880/patient/9999999001/medications/0ndpc1dvqagapo0oui3num",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 400,
        "y": 360,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "870d4213.163d3",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Medications Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 360,
        "wires": [
            [
                "778824c2.c921ac"
            ]
        ]
    },
    {
        "id": "13eb2bc7.c87fb4",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "GET Allergies Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://172.17.0.2:1880/patient/9999999001/allergies/kq21alape7mtw7eupmrzua?transform=TransformB-Allergy-UI2FHIR",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 390,
        "y": 320,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "a9eb7e7a.70d03",
        "type": "json",
        "z": "a445d380.3903c",
        "name": "Response Data JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "978baa5b.7fb9e8"
            ]
        ]
    },
    {
        "id": "978baa5b.7fb9e8",
        "type": "debug",
        "z": "a445d380.3903c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1610,
        "y": 240,
        "wires": []
    },
    {
        "id": "1acacc4a.394424",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "Update Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 80,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "47e83196.0a3a1",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Method is PUT",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 80,
        "wires": [
            [
                "1acacc4a.394424"
            ]
        ]
    },
    {
        "id": "56fa5418.5a143c",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Update API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://172.17.0.2:1880/patient/'&msg.payload.ptId&'/'&msg.payload.datatype&'/'&msg.payload.data.sourceId",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 80,
        "wires": [
            [
                "47e83196.0a3a1"
            ]
        ]
    },
    {
        "id": "2731b66d.20852a",
        "type": "function",
        "z": "a445d380.3903c",
        "name": "Generate Data for Update",
        "func": "msg.payload = {\n    ptId: 9999999001,\n    datatype: 'allergies',\n    data: {\n        author: \"Not known\",\n        cause: \"Adverse reaction to aspirin\",\n        causeCode: \"http://snomed.info/sct\",\n        causeTerminology: 292044008,\n        dateCreated: 1181170800000,\n        id: \"kq21alape7mtw7eupmrzua\",\n        originalComposition: \"\",\n        originalSource: \"\",\n        reaction: \"Adverse reaction to aspirin\",\n        source: \"ethercis\",\n        sourceId: \"kq21alape7mtw7eupmrzua\",\n        terminologyCode: \"http://snomed.info/sct\"\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 80,
        "wires": [
            [
                "56fa5418.5a143c"
            ]
        ]
    },
    {
        "id": "ba939596.f60a68",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Update Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "2731b66d.20852a"
            ]
        ]
    },
    {
        "id": "d377ca9d.d7d768",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Delete Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 120,
        "wires": [
            [
                "6860cb46.6c7934"
            ]
        ]
    },
    {
        "id": "d46b097b.4a5a58",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "Delete Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 120,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "90b7f32f.c5aef",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Method is DELETE",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "DELETE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 120,
        "wires": [
            [
                "d46b097b.4a5a58"
            ]
        ]
    },
    {
        "id": "5a3d303e.69931",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Delete API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://172.17.0.2:1880/patient/'&msg.payload.ptId&'/'&msg.payload.datatype&'/'&msg.payload.sourceId",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 120,
        "wires": [
            [
                "90b7f32f.c5aef"
            ]
        ]
    },
    {
        "id": "6860cb46.6c7934",
        "type": "function",
        "z": "a445d380.3903c",
        "name": "Generate Data for Delete",
        "func": "msg.payload = {\n    ptId: 9999999001,\n    datatype: 'allergies',\n    sourceId: \"uige9bzetlkce76w5x9hti\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 120,
        "wires": [
            [
                "5a3d303e.69931"
            ]
        ]
    },
    {
        "id": "ac17ad3c.e8873",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "GET Medication Synopsis",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://172.17.0.2:1880/patient/9999999001/synopsis/medications",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 410,
        "y": 220,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "21d509cc.224636",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Medications Synopsis Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "ac17ad3c.e8873"
            ]
        ]
    },
    {
        "id": "adf14640.b95768",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "GET Problems Synopsis",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://172.17.0.2:1880/patient/9999999001/synopsis/problems",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 410,
        "y": 260,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "846ce411.0d6e58",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Problems Synopsis Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 260,
        "wires": [
            [
                "adf14640.b95768"
            ]
        ]
    },
    {
        "id": "2fed8c0d.b087d4",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Problems Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 400,
        "wires": [
            [
                "eacfae82.b256f"
            ]
        ]
    },
    {
        "id": "eacfae82.b256f",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "GET Problems Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://172.17.0.2:1880/patient/9999999001/problems/kb6q8h0zucjx8nuov7h8",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 400,
        "y": 400,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "71065568.d7243c",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Patient Create Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 520,
        "wires": [
            [
                "818f3e35.0b81"
            ]
        ]
    },
    {
        "id": "818f3e35.0b81",
        "type": "function",
        "z": "a445d380.3903c",
        "name": "Generate Data for Patient",
        "func": "\nmsg.payload = {\n    data: {\n        address: {\n            city: \"Redhill\",\n            country: \"United Kingdom\",\n            district: \"Surrey\",\n            line: \"3 Cooper Walk\",\n            postalCode: \"RH1 6SF\",\n        },\n        birthDate: \"1956-11-10\",\n        gender: \"male\",\n        id: \"9999999801\",\n        name: {\n            family: \"Tweed\",\n            given: [\n                \"Rob\",\n            ],\n            prefix: \"Mr\",\n            telecom: \"+779017 876\"\n        },\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 520,
        "wires": [
            [
                "3f89679e.c15fd8"
            ]
        ]
    },
    {
        "id": "3f89679e.c15fd8",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Create API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://172.17.0.2:1880/mpi/patient/9999999801'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 520,
        "wires": [
            [
                "1938bf4f.643b11"
            ]
        ]
    },
    {
        "id": "1938bf4f.643b11",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Method is POST",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 520,
        "wires": [
            [
                "68ec729d.5285ac"
            ]
        ]
    },
    {
        "id": "68ec729d.5285ac",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "Create Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 520,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "e493732a.aa78a",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Patient Update Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 580,
        "wires": [
            [
                "fdd3bae3.5c26e8"
            ]
        ]
    },
    {
        "id": "fdd3bae3.5c26e8",
        "type": "function",
        "z": "a445d380.3903c",
        "name": "Generate Data for Patient",
        "func": "\nmsg.payload = {\n    data: {\n        address: {\n            city: \"Redhill\",\n            country: \"United Kingdom\",\n            district: \"Surrey\",\n            line: \"3 Cooper Walk\",\n            postalCode: \"RH1 6SF\"\n        },\n        birthDate: \"1956-11-10\",\n        gender: \"female\",\n        id: \"9999999801\",\n        name: {\n            family: \"Tweed\",\n            given: [\n                \"Rob\"\n            ],\n            prefix: \"Mr\",\n            telecom: \"+779017 876\"\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 580,
        "wires": [
            [
                "69f25ce1.fb4104"
            ]
        ]
    },
    {
        "id": "69f25ce1.fb4104",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Update API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://172.17.0.2:1880/mpi/patient/'&msg.payload.data.id",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 580,
        "wires": [
            [
                "3e900156.24caae"
            ]
        ]
    },
    {
        "id": "3e900156.24caae",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Method is PUT",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 580,
        "wires": [
            [
                "617d006c.dd6fc"
            ]
        ]
    },
    {
        "id": "617d006c.dd6fc",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "Update Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 580,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "5dfee004.c99ec",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Patient Delete Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 640,
        "wires": [
            [
                "aa3d552d.d318c8"
            ]
        ]
    },
    {
        "id": "aa3d552d.d318c8",
        "type": "function",
        "z": "a445d380.3903c",
        "name": "Generate Data for Delete",
        "func": "msg.payload = {\n    ptId: 9999999801,\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 640,
        "wires": [
            [
                "118e7eca.9e2321"
            ]
        ]
    },
    {
        "id": "727bf90b.fdf3d8",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Method is DELETE",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "DELETE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 640,
        "wires": [
            [
                "72265bf.c228da4"
            ]
        ]
    },
    {
        "id": "72265bf.c228da4",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "Delete Request",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 1060,
        "y": 640,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    },
    {
        "id": "118e7eca.9e2321",
        "type": "change",
        "z": "a445d380.3903c",
        "name": "Delete API Route",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'http://172.17.0.2:1880/mpi/patient/'&msg.payload.ptId",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 640,
        "wires": [
            [
                "727bf90b.fdf3d8"
            ]
        ]
    },
    {
        "id": "f2056bc9.60f268",
        "type": "inject",
        "z": "a445d380.3903c",
        "name": "Patient Data Test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 440,
        "wires": [
            [
                "849c14ce.aa4448"
            ]
        ]
    },
    {
        "id": "849c14ce.aa4448",
        "type": "http request",
        "z": "a445d380.3903c",
        "name": "GET Patients Data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://172.17.0.2:1880/mpi/patient/9999999801",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 390,
        "y": 440,
        "wires": [
            [
                "a9eb7e7a.70d03"
            ]
        ]
    }
]